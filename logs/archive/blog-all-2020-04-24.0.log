2020-04-24 16:08:10.454 INFO  [main]com.kxingyi.blog.type.TypeTest.logStarting:55 -Starting TypeTest on DESKTOP-UBAL805 with PID 22880 (started by kxingyi in E:\workSpace\idea_workspace\vue_blog)
2020-04-24 16:08:10.460 DEBUG [main]com.kxingyi.blog.type.TypeTest.logStarting:56 -Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-04-24 16:08:10.462 INFO  [main]com.kxingyi.blog.type.TypeTest.logStartupProfileInfo:655 -The following profiles are active: dev
2020-04-24 16:08:11.452 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-24 16:08:11.454 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-04-24 16:08:11.486 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 26ms. Found 0 MongoDB repository interfaces.
2020-04-24 16:08:11.504 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-24 16:08:11.506 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-04-24 16:08:11.523 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 7ms. Found 0 Redis repository interfaces.
2020-04-24 16:08:12.123 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:08:12.400 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.kxingyi.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$f5fcf290] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:08:12.466 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:08:12.482 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$d6276a5e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:08:12.489 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$bcff0ea0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:08:12.494 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-24 16:08:12.558 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:08:12.577 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:08:12.617 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:08:13.909 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-24 16:08:13.910 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:08:13.985 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:08:14.317 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:08:14.333 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:08:14.343 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:08:14.349 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy106] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:08:14.352 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.kxingyi.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:08:14.359 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.kxingyi.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:08:14.364 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.kxingyi.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:08:14.432 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:08:14.479 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:08:17.321 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[127.0.0.1:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-24 16:08:17.322 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 127.0.0.1:27017 to client view of cluster
2020-04-24 16:08:17.407 INFO  [cluster-ClusterId{value='5ea29e7133392e4f57e4f601', description='null'}-127.0.0.1:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:46}] to 127.0.0.1:27017
2020-04-24 16:08:17.412 INFO  [cluster-ClusterId{value='5ea29e7133392e4f57e4f601', description='null'}-127.0.0.1:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 2]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=null, roundTripTimeNanos=1715200}
2020-04-24 16:08:17.414 INFO  [cluster-ClusterId{value='5ea29e7133392e4f57e4f601', description='null'}-127.0.0.1:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-04-24 16:08:18.423 INFO  [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:120 -Context refreshed
2020-04-24 16:08:18.441 INFO  [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:123 -Found 1 custom documentation plugin(s)
2020-04-24 16:08:18.451 INFO  [main]s.d.spring.web.scanners.ApiListingReferenceScanner.scan:44 -Scanning for api listing references
2020-04-24 16:08:18.563 WARN  [main]s.d.s.readers.operation.OperationImplicitParameterReader.maybeGetModelRef:88 -Coercing to be of type string. This may not even be a scalar type in actuality
2020-04-24 16:08:18.566 WARN  [main]s.d.s.readers.operation.OperationImplicitParameterReader.maybeGetModelRef:88 -Coercing to be of type string. This may not even be a scalar type in actuality
2020-04-24 16:08:18.661 INFO  [main]com.kxingyi.blog.type.TypeTest.logStarted:61 -Started TypeTest in 8.699 seconds (JVM running for 9.827)
2020-04-24 16:08:19.034 DEBUG [main]com.kxingyi.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable, deleted from bl_type order by type_blog_count asc 
2020-04-24 16:08:19.063 DEBUG [main]com.kxingyi.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-04-24 16:08:19.090 DEBUG [main]com.kxingyi.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 1
2020-04-24 16:08:19.137 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-04-24 16:08:19.155 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-04-24 16:09:25.258 INFO  [main]com.kxingyi.blog.type.TypeTest.logStarting:55 -Starting TypeTest on DESKTOP-UBAL805 with PID 25788 (started by kxingyi in E:\workSpace\idea_workspace\vue_blog)
2020-04-24 16:09:25.260 DEBUG [main]com.kxingyi.blog.type.TypeTest.logStarting:56 -Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-04-24 16:09:25.261 INFO  [main]com.kxingyi.blog.type.TypeTest.logStartupProfileInfo:655 -The following profiles are active: dev
2020-04-24 16:09:26.317 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-24 16:09:26.320 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-04-24 16:09:26.354 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 27ms. Found 0 MongoDB repository interfaces.
2020-04-24 16:09:26.368 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-24 16:09:26.370 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-04-24 16:09:26.386 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 7ms. Found 0 Redis repository interfaces.
2020-04-24 16:09:26.990 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:09:27.281 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.kxingyi.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$242c1b1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:09:27.358 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:09:27.377 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$45692ed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:09:27.388 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$eb2e372f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:09:27.394 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-24 16:09:27.471 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:09:27.495 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:09:27.555 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:09:28.877 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-24 16:09:28.879 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:09:28.948 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:09:29.272 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:09:29.292 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:09:29.304 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:09:29.312 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy106] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:09:29.318 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.kxingyi.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:09:29.327 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.kxingyi.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:09:29.330 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.kxingyi.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:09:29.404 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:09:29.450 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:09:32.640 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[127.0.0.1:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-24 16:09:32.641 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 127.0.0.1:27017 to client view of cluster
2020-04-24 16:09:32.727 INFO  [cluster-ClusterId{value='5ea29ebcd29be3141ca20cf3', description='null'}-127.0.0.1:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:47}] to 127.0.0.1:27017
2020-04-24 16:09:32.732 INFO  [cluster-ClusterId{value='5ea29ebcd29be3141ca20cf3', description='null'}-127.0.0.1:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 2]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=null, roundTripTimeNanos=1665200}
2020-04-24 16:09:32.733 INFO  [cluster-ClusterId{value='5ea29ebcd29be3141ca20cf3', description='null'}-127.0.0.1:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-04-24 16:09:33.854 INFO  [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:120 -Context refreshed
2020-04-24 16:09:33.881 INFO  [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:123 -Found 1 custom documentation plugin(s)
2020-04-24 16:09:33.895 INFO  [main]s.d.spring.web.scanners.ApiListingReferenceScanner.scan:44 -Scanning for api listing references
2020-04-24 16:09:34.066 WARN  [main]s.d.s.readers.operation.OperationImplicitParameterReader.maybeGetModelRef:88 -Coercing to be of type string. This may not even be a scalar type in actuality
2020-04-24 16:09:34.070 WARN  [main]s.d.s.readers.operation.OperationImplicitParameterReader.maybeGetModelRef:88 -Coercing to be of type string. This may not even be a scalar type in actuality
2020-04-24 16:09:34.176 INFO  [main]com.kxingyi.blog.type.TypeTest.logStarted:61 -Started TypeTest in 9.473 seconds (JVM running for 10.555)
2020-04-24 16:09:34.492 DEBUG [main]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 16:09:34.534 DEBUG [main]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: java分类(String)
2020-04-24 16:09:34.545 DEBUG [main]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 16:09:34.599 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-04-24 16:09:34.614 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-04-24 16:10:37.056 INFO  [main]com.kxingyi.blog.type.TypeTest.logStarting:55 -Starting TypeTest on DESKTOP-UBAL805 with PID 23396 (started by kxingyi in E:\workSpace\idea_workspace\vue_blog)
2020-04-24 16:10:37.058 DEBUG [main]com.kxingyi.blog.type.TypeTest.logStarting:56 -Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-04-24 16:10:37.058 INFO  [main]com.kxingyi.blog.type.TypeTest.logStartupProfileInfo:655 -The following profiles are active: dev
2020-04-24 16:10:37.972 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-24 16:10:37.974 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-04-24 16:10:38.005 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 25ms. Found 0 MongoDB repository interfaces.
2020-04-24 16:10:38.021 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-24 16:10:38.022 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-04-24 16:10:38.036 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
2020-04-24 16:10:38.605 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:10:38.879 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.kxingyi.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$f5fcf290] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:10:38.950 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:10:38.969 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$d6276a5e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:10:38.977 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$bcff0ea0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:10:38.982 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-24 16:10:39.054 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:10:39.073 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:10:39.140 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:10:40.540 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-24 16:10:40.540 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:10:40.619 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:10:40.921 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:10:40.936 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:10:40.945 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:10:40.952 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy106] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:10:40.956 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.kxingyi.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:10:40.962 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.kxingyi.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:10:40.966 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.kxingyi.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:10:41.034 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:10:41.076 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:10:43.826 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[127.0.0.1:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-24 16:10:43.827 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 127.0.0.1:27017 to client view of cluster
2020-04-24 16:10:43.922 INFO  [cluster-ClusterId{value='5ea29f03198dc960714f87df', description='null'}-127.0.0.1:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:48}] to 127.0.0.1:27017
2020-04-24 16:10:43.927 INFO  [cluster-ClusterId{value='5ea29f03198dc960714f87df', description='null'}-127.0.0.1:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 2]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=null, roundTripTimeNanos=1793900}
2020-04-24 16:10:43.929 INFO  [cluster-ClusterId{value='5ea29f03198dc960714f87df', description='null'}-127.0.0.1:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-04-24 16:10:45.055 INFO  [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:120 -Context refreshed
2020-04-24 16:10:45.074 INFO  [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:123 -Found 1 custom documentation plugin(s)
2020-04-24 16:10:45.084 INFO  [main]s.d.spring.web.scanners.ApiListingReferenceScanner.scan:44 -Scanning for api listing references
2020-04-24 16:10:45.193 WARN  [main]s.d.s.readers.operation.OperationImplicitParameterReader.maybeGetModelRef:88 -Coercing to be of type string. This may not even be a scalar type in actuality
2020-04-24 16:10:45.198 WARN  [main]s.d.s.readers.operation.OperationImplicitParameterReader.maybeGetModelRef:88 -Coercing to be of type string. This may not even be a scalar type in actuality
2020-04-24 16:10:45.293 INFO  [main]com.kxingyi.blog.type.TypeTest.logStarted:61 -Started TypeTest in 8.782 seconds (JVM running for 9.864)
2020-04-24 16:10:45.640 DEBUG [main]com.kxingyi.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable, deleted from bl_type order by type_blog_count asc 
2020-04-24 16:10:45.668 DEBUG [main]com.kxingyi.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-04-24 16:10:45.693 DEBUG [main]com.kxingyi.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 2
2020-04-24 16:10:45.746 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-04-24 16:10:45.765 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-04-24 16:12:18.989 INFO  [main]com.kxingyi.blog.type.TypeTest.logStarting:55 -Starting TypeTest on DESKTOP-UBAL805 with PID 12112 (started by kxingyi in E:\workSpace\idea_workspace\vue_blog)
2020-04-24 16:12:18.991 DEBUG [main]com.kxingyi.blog.type.TypeTest.logStarting:56 -Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-04-24 16:12:18.992 INFO  [main]com.kxingyi.blog.type.TypeTest.logStartupProfileInfo:655 -The following profiles are active: dev
2020-04-24 16:12:19.895 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-24 16:12:19.897 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-04-24 16:12:19.926 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 24ms. Found 0 MongoDB repository interfaces.
2020-04-24 16:12:19.940 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-24 16:12:19.942 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-04-24 16:12:19.956 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
2020-04-24 16:12:20.481 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:12:20.720 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.kxingyi.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$f5fcf290] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:12:20.784 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:12:20.799 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$d6276a5e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:12:20.807 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$bcff0ea0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:12:20.811 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-24 16:12:20.874 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:12:20.897 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:12:20.943 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:12:22.144 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-24 16:12:22.144 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:12:22.202 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:12:22.496 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:12:22.510 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:12:22.521 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:12:22.527 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy106] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:12:22.530 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.kxingyi.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:12:22.535 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.kxingyi.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:12:22.538 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.kxingyi.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:12:22.597 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:12:22.639 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 16:12:25.351 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[127.0.0.1:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-24 16:12:25.352 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 127.0.0.1:27017 to client view of cluster
2020-04-24 16:12:25.433 INFO  [cluster-ClusterId{value='5ea29f69852c6d40865e0928', description='null'}-127.0.0.1:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:49}] to 127.0.0.1:27017
2020-04-24 16:12:25.437 INFO  [cluster-ClusterId{value='5ea29f69852c6d40865e0928', description='null'}-127.0.0.1:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 2]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=null, roundTripTimeNanos=1266900}
2020-04-24 16:12:25.438 INFO  [cluster-ClusterId{value='5ea29f69852c6d40865e0928', description='null'}-127.0.0.1:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-04-24 16:12:26.518 INFO  [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:120 -Context refreshed
2020-04-24 16:12:26.545 INFO  [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:123 -Found 1 custom documentation plugin(s)
2020-04-24 16:12:26.567 INFO  [main]s.d.spring.web.scanners.ApiListingReferenceScanner.scan:44 -Scanning for api listing references
2020-04-24 16:12:26.721 WARN  [main]s.d.s.readers.operation.OperationImplicitParameterReader.maybeGetModelRef:88 -Coercing to be of type string. This may not even be a scalar type in actuality
2020-04-24 16:12:26.724 WARN  [main]s.d.s.readers.operation.OperationImplicitParameterReader.maybeGetModelRef:88 -Coercing to be of type string. This may not even be a scalar type in actuality
2020-04-24 16:12:26.827 INFO  [main]com.kxingyi.blog.type.TypeTest.logStarted:61 -Started TypeTest in 8.338 seconds (JVM running for 9.378)
2020-04-24 16:12:27.201 DEBUG [main]com.kxingyi.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable, deleted from bl_type order by type_blog_count asc 
2020-04-24 16:12:27.242 DEBUG [main]com.kxingyi.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-04-24 16:12:27.273 DEBUG [main]com.kxingyi.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 2
2020-04-24 16:12:27.328 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-04-24 16:12:27.350 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-04-24 22:10:02.371 INFO  [main]com.kxingyi.blog.type.TypeTest.logStarting:55 -Starting TypeTest on DESKTOP-UBAL805 with PID 22976 (started by kxingyi in E:\workSpace\idea_workspace\vue_blog)
2020-04-24 22:10:02.373 DEBUG [main]com.kxingyi.blog.type.TypeTest.logStarting:56 -Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-04-24 22:10:02.374 INFO  [main]com.kxingyi.blog.type.TypeTest.logStartupProfileInfo:655 -The following profiles are active: dev
2020-04-24 22:10:03.262 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-24 22:10:03.263 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-04-24 22:10:03.296 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 26ms. Found 0 MongoDB repository interfaces.
2020-04-24 22:10:03.312 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-24 22:10:03.313 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-04-24 22:10:03.327 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
2020-04-24 22:10:03.862 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:10:04.118 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.kxingyi.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$76df0535] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:10:04.180 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:10:04.195 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$57097d03] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:10:04.202 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$3de12145] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:10:04.207 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-24 22:10:04.281 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:10:04.304 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:10:04.348 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:10:05.579 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-24 22:10:05.580 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:10:05.639 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:10:05.911 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:10:05.926 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:10:05.934 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:10:05.939 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy106] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:10:05.943 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.kxingyi.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:10:05.948 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.kxingyi.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:10:05.951 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.kxingyi.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:10:06.006 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:10:06.036 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:10:08.478 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[127.0.0.1:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-24 22:10:08.479 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 127.0.0.1:27017 to client view of cluster
2020-04-24 22:10:08.569 INFO  [cluster-ClusterId{value='5ea2f3401716065fe4362484', description='null'}-127.0.0.1:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:50}] to 127.0.0.1:27017
2020-04-24 22:10:08.573 INFO  [cluster-ClusterId{value='5ea2f3401716065fe4362484', description='null'}-127.0.0.1:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 2]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=null, roundTripTimeNanos=1504600}
2020-04-24 22:10:08.575 INFO  [cluster-ClusterId{value='5ea2f3401716065fe4362484', description='null'}-127.0.0.1:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-04-24 22:10:09.590 INFO  [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:120 -Context refreshed
2020-04-24 22:10:09.610 INFO  [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:123 -Found 1 custom documentation plugin(s)
2020-04-24 22:10:09.620 INFO  [main]s.d.spring.web.scanners.ApiListingReferenceScanner.scan:44 -Scanning for api listing references
2020-04-24 22:10:09.722 WARN  [main]s.d.s.readers.operation.OperationImplicitParameterReader.maybeGetModelRef:88 -Coercing to be of type string. This may not even be a scalar type in actuality
2020-04-24 22:10:09.724 WARN  [main]s.d.s.readers.operation.OperationImplicitParameterReader.maybeGetModelRef:88 -Coercing to be of type string. This may not even be a scalar type in actuality
2020-04-24 22:10:09.803 INFO  [main]com.kxingyi.blog.type.TypeTest.logStarted:61 -Started TypeTest in 7.927 seconds (JVM running for 8.968)
2020-04-24 22:10:10.088 DEBUG [main]com.kxingyi.blog.mapper.TypeMapper.getTypeList.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable, deleted from bl_type where deleted = 0 and enable = 1 
2020-04-24 22:10:10.118 DEBUG [main]com.kxingyi.blog.mapper.TypeMapper.getTypeList.debug:159 -==> Parameters: 
2020-04-24 22:10:10.145 DEBUG [main]com.kxingyi.blog.mapper.TypeMapper.getTypeList.debug:159 -<==      Total: 2
2020-04-24 22:10:10.196 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-04-24 22:10:10.206 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-04-24 22:19:10.245 INFO  [main]com.kxingyi.blog.type.TypeTest.logStarting:55 -Starting TypeTest on DESKTOP-UBAL805 with PID 28356 (started by kxingyi in E:\workSpace\idea_workspace\vue_blog)
2020-04-24 22:19:10.248 DEBUG [main]com.kxingyi.blog.type.TypeTest.logStarting:56 -Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-04-24 22:19:10.249 INFO  [main]com.kxingyi.blog.type.TypeTest.logStartupProfileInfo:655 -The following profiles are active: dev
2020-04-24 22:19:11.112 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-24 22:19:11.114 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-04-24 22:19:11.145 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 25ms. Found 0 MongoDB repository interfaces.
2020-04-24 22:19:11.160 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-24 22:19:11.161 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-04-24 22:19:11.177 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
2020-04-24 22:19:11.692 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:19:11.928 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.kxingyi.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$25bfcea] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:19:11.992 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:19:12.009 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$e28674b8] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:19:12.017 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$c95e18fa] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:19:12.022 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-24 22:19:12.083 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:19:12.100 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:19:12.148 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:19:13.461 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-24 22:19:13.461 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:19:13.535 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:19:13.804 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:19:13.817 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:19:13.826 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:19:13.832 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy106] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:19:13.836 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.kxingyi.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:19:13.841 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.kxingyi.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:19:13.843 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.kxingyi.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:19:13.899 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:19:13.940 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:19:16.306 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[127.0.0.1:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-24 22:19:16.306 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 127.0.0.1:27017 to client view of cluster
2020-04-24 22:19:16.372 INFO  [cluster-ClusterId{value='5ea2f5649e2baf77c224ba88', description='null'}-127.0.0.1:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:51}] to 127.0.0.1:27017
2020-04-24 22:19:16.375 INFO  [cluster-ClusterId{value='5ea2f5649e2baf77c224ba88', description='null'}-127.0.0.1:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 2]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=null, roundTripTimeNanos=990600}
2020-04-24 22:19:16.376 INFO  [cluster-ClusterId{value='5ea2f5649e2baf77c224ba88', description='null'}-127.0.0.1:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-04-24 22:19:17.280 INFO  [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:120 -Context refreshed
2020-04-24 22:19:17.296 INFO  [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:123 -Found 1 custom documentation plugin(s)
2020-04-24 22:19:17.306 INFO  [main]s.d.spring.web.scanners.ApiListingReferenceScanner.scan:44 -Scanning for api listing references
2020-04-24 22:19:17.401 WARN  [main]s.d.s.readers.operation.OperationImplicitParameterReader.maybeGetModelRef:88 -Coercing to be of type string. This may not even be a scalar type in actuality
2020-04-24 22:19:17.404 WARN  [main]s.d.s.readers.operation.OperationImplicitParameterReader.maybeGetModelRef:88 -Coercing to be of type string. This may not even be a scalar type in actuality
2020-04-24 22:19:17.485 INFO  [main]com.kxingyi.blog.type.TypeTest.logStarted:61 -Started TypeTest in 7.72 seconds (JVM running for 8.697)
2020-04-24 22:19:17.760 DEBUG [main]com.kxingyi.blog.mapper.TypeMapper.update.debug:159 -==>  Preparing: update bl_type SET type_name = ? type_blog_count = ? enable = ? deleted = ? where type_id = ? 
2020-04-24 22:19:17.838 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-04-24 22:19:17.850 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-04-24 22:20:02.007 INFO  [main]com.kxingyi.blog.type.TypeTest.logStarting:55 -Starting TypeTest on DESKTOP-UBAL805 with PID 4412 (started by kxingyi in E:\workSpace\idea_workspace\vue_blog)
2020-04-24 22:20:02.009 DEBUG [main]com.kxingyi.blog.type.TypeTest.logStarting:56 -Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-04-24 22:20:02.010 INFO  [main]com.kxingyi.blog.type.TypeTest.logStartupProfileInfo:655 -The following profiles are active: dev
2020-04-24 22:20:02.832 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-24 22:20:02.834 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-04-24 22:20:02.864 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 25ms. Found 0 MongoDB repository interfaces.
2020-04-24 22:20:02.880 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-24 22:20:02.881 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-04-24 22:20:02.897 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 8ms. Found 0 Redis repository interfaces.
2020-04-24 22:20:03.393 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:20:03.626 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.kxingyi.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$242c1b1f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:20:03.683 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:20:03.696 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$45692ed] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:20:03.704 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$eb2e372f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:20:03.708 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-24 22:20:03.765 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:20:03.784 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:20:03.825 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:20:04.956 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-24 22:20:04.956 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:20:05.014 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:20:05.274 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:20:05.286 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:20:05.294 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:20:05.299 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy106] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:20:05.302 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.kxingyi.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:20:05.306 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.kxingyi.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:20:05.309 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.kxingyi.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:20:05.361 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:20:05.404 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:20:07.507 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[127.0.0.1:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-24 22:20:07.508 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 127.0.0.1:27017 to client view of cluster
2020-04-24 22:20:07.571 INFO  [cluster-ClusterId{value='5ea2f59780e5e468839c2b8f', description='null'}-127.0.0.1:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:52}] to 127.0.0.1:27017
2020-04-24 22:20:07.576 INFO  [cluster-ClusterId{value='5ea2f59780e5e468839c2b8f', description='null'}-127.0.0.1:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 2]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=null, roundTripTimeNanos=1733900}
2020-04-24 22:20:07.578 INFO  [cluster-ClusterId{value='5ea2f59780e5e468839c2b8f', description='null'}-127.0.0.1:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-04-24 22:20:08.338 INFO  [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:120 -Context refreshed
2020-04-24 22:20:08.354 INFO  [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:123 -Found 1 custom documentation plugin(s)
2020-04-24 22:20:08.362 INFO  [main]s.d.spring.web.scanners.ApiListingReferenceScanner.scan:44 -Scanning for api listing references
2020-04-24 22:20:08.443 WARN  [main]s.d.s.readers.operation.OperationImplicitParameterReader.maybeGetModelRef:88 -Coercing to be of type string. This may not even be a scalar type in actuality
2020-04-24 22:20:08.445 WARN  [main]s.d.s.readers.operation.OperationImplicitParameterReader.maybeGetModelRef:88 -Coercing to be of type string. This may not even be a scalar type in actuality
2020-04-24 22:20:08.516 INFO  [main]com.kxingyi.blog.type.TypeTest.logStarted:61 -Started TypeTest in 6.981 seconds (JVM running for 7.911)
2020-04-24 22:20:08.750 DEBUG [main]com.kxingyi.blog.mapper.TypeMapper.update.debug:159 -==>  Preparing: update bl_type SET type_name = ? type_blog_count = ? enable = ? deleted = ? where type_id = ? 
2020-04-24 22:20:08.777 DEBUG [main]com.kxingyi.blog.mapper.TypeMapper.update.debug:159 -==> Parameters: TEST(String), 9000(Integer), 1(Integer), 1(Integer), 8(Integer)
2020-04-24 22:20:08.881 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-04-24 22:20:08.892 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-04-24 22:21:24.618 INFO  [main]com.kxingyi.blog.type.TypeTest.logStarting:55 -Starting TypeTest on DESKTOP-UBAL805 with PID 26324 (started by kxingyi in E:\workSpace\idea_workspace\vue_blog)
2020-04-24 22:21:24.620 DEBUG [main]com.kxingyi.blog.type.TypeTest.logStarting:56 -Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-04-24 22:21:24.621 INFO  [main]com.kxingyi.blog.type.TypeTest.logStartupProfileInfo:655 -The following profiles are active: dev
2020-04-24 22:21:25.509 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-24 22:21:25.511 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-04-24 22:21:25.541 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 25ms. Found 0 MongoDB repository interfaces.
2020-04-24 22:21:25.556 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-24 22:21:25.557 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-04-24 22:21:25.571 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
2020-04-24 22:21:26.090 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:21:26.321 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.kxingyi.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$f5fcf290] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:21:26.381 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:21:26.395 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$d6276a5e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:21:26.403 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$bcff0ea0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:21:26.408 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-24 22:21:26.476 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:21:26.496 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:21:26.536 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:21:27.715 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-24 22:21:27.716 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:21:27.801 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:21:28.060 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:21:28.073 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:21:28.081 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:21:28.087 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy106] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:21:28.090 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.kxingyi.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:21:28.095 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.kxingyi.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:21:28.098 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.kxingyi.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:21:28.145 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:21:28.173 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:21:30.318 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[127.0.0.1:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-24 22:21:30.319 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 127.0.0.1:27017 to client view of cluster
2020-04-24 22:21:30.383 INFO  [cluster-ClusterId{value='5ea2f5ea5ad01c3405881b0a', description='null'}-127.0.0.1:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:53}] to 127.0.0.1:27017
2020-04-24 22:21:30.387 INFO  [cluster-ClusterId{value='5ea2f5ea5ad01c3405881b0a', description='null'}-127.0.0.1:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 2]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=null, roundTripTimeNanos=1287700}
2020-04-24 22:21:30.388 INFO  [cluster-ClusterId{value='5ea2f5ea5ad01c3405881b0a', description='null'}-127.0.0.1:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-04-24 22:21:31.186 INFO  [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:120 -Context refreshed
2020-04-24 22:21:31.200 INFO  [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:123 -Found 1 custom documentation plugin(s)
2020-04-24 22:21:31.208 INFO  [main]s.d.spring.web.scanners.ApiListingReferenceScanner.scan:44 -Scanning for api listing references
2020-04-24 22:21:31.297 WARN  [main]s.d.s.readers.operation.OperationImplicitParameterReader.maybeGetModelRef:88 -Coercing to be of type string. This may not even be a scalar type in actuality
2020-04-24 22:21:31.299 WARN  [main]s.d.s.readers.operation.OperationImplicitParameterReader.maybeGetModelRef:88 -Coercing to be of type string. This may not even be a scalar type in actuality
2020-04-24 22:21:31.369 INFO  [main]com.kxingyi.blog.type.TypeTest.logStarted:61 -Started TypeTest in 7.277 seconds (JVM running for 8.368)
2020-04-24 22:21:31.623 DEBUG [main]com.kxingyi.blog.mapper.TypeMapper.update.debug:159 -==>  Preparing: update bl_type SET type_name = ?, type_blog_count = ?, enable = ?, deleted = ? where type_id = ? 
2020-04-24 22:21:31.652 DEBUG [main]com.kxingyi.blog.mapper.TypeMapper.update.debug:159 -==> Parameters: TEST(String), 9000(Integer), 1(Integer), 1(Integer), 8(Integer)
2020-04-24 22:21:31.659 DEBUG [main]com.kxingyi.blog.mapper.TypeMapper.update.debug:159 -<==    Updates: 1
2020-04-24 22:21:31.695 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-04-24 22:21:31.706 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-04-24 22:26:14.349 INFO  [main]com.kxingyi.blog.type.TypeTest.logStarting:55 -Starting TypeTest on DESKTOP-UBAL805 with PID 26936 (started by kxingyi in E:\workSpace\idea_workspace\vue_blog)
2020-04-24 22:26:14.352 DEBUG [main]com.kxingyi.blog.type.TypeTest.logStarting:56 -Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-04-24 22:26:14.353 INFO  [main]com.kxingyi.blog.type.TypeTest.logStartupProfileInfo:655 -The following profiles are active: dev
2020-04-24 22:26:15.451 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-24 22:26:15.453 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-04-24 22:26:15.486 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 27ms. Found 0 MongoDB repository interfaces.
2020-04-24 22:26:15.504 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-24 22:26:15.505 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-04-24 22:26:15.522 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 8ms. Found 0 Redis repository interfaces.
2020-04-24 22:26:16.070 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:26:16.321 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.kxingyi.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$2403d958] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:26:16.383 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:26:16.398 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$42e5126] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:26:16.406 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$eb05f568] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:26:16.412 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-24 22:26:16.479 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:26:16.499 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:26:16.546 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:26:17.827 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-24 22:26:17.828 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:26:17.921 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:26:18.273 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:26:18.288 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:26:18.297 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:26:18.303 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy106] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:26:18.306 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.kxingyi.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:26:18.311 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.kxingyi.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:26:18.315 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.kxingyi.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:26:18.374 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:26:18.411 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:26:20.760 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[127.0.0.1:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-24 22:26:20.760 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 127.0.0.1:27017 to client view of cluster
2020-04-24 22:26:20.831 INFO  [cluster-ClusterId{value='5ea2f70c438536295681583c', description='null'}-127.0.0.1:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:54}] to 127.0.0.1:27017
2020-04-24 22:26:20.835 INFO  [cluster-ClusterId{value='5ea2f70c438536295681583c', description='null'}-127.0.0.1:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 2]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=null, roundTripTimeNanos=1571000}
2020-04-24 22:26:20.837 INFO  [cluster-ClusterId{value='5ea2f70c438536295681583c', description='null'}-127.0.0.1:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-04-24 22:26:21.625 INFO  [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:120 -Context refreshed
2020-04-24 22:26:21.641 INFO  [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:123 -Found 1 custom documentation plugin(s)
2020-04-24 22:26:21.651 INFO  [main]s.d.spring.web.scanners.ApiListingReferenceScanner.scan:44 -Scanning for api listing references
2020-04-24 22:26:21.742 WARN  [main]s.d.s.readers.operation.OperationImplicitParameterReader.maybeGetModelRef:88 -Coercing to be of type string. This may not even be a scalar type in actuality
2020-04-24 22:26:21.744 WARN  [main]s.d.s.readers.operation.OperationImplicitParameterReader.maybeGetModelRef:88 -Coercing to be of type string. This may not even be a scalar type in actuality
2020-04-24 22:26:21.816 INFO  [main]com.kxingyi.blog.type.TypeTest.logStarted:61 -Started TypeTest in 8.06 seconds (JVM running for 9.1)
2020-04-24 22:26:22.056 DEBUG [main]com.kxingyi.blog.mapper.TypeMapper.deleteById.debug:159 -==>  Preparing: delete from bl_type where type_id = ? 
2020-04-24 22:26:22.086 DEBUG [main]com.kxingyi.blog.mapper.TypeMapper.deleteById.debug:159 -==> Parameters: 8(Integer)
2020-04-24 22:26:22.095 DEBUG [main]com.kxingyi.blog.mapper.TypeMapper.deleteById.debug:159 -<==    Updates: 1
2020-04-24 22:26:22.153 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-04-24 22:26:22.166 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-04-24 22:43:05.788 INFO  [main]com.kxingyi.blog.type.TypeTest.logStarting:55 -Starting TypeTest on DESKTOP-UBAL805 with PID 20640 (started by kxingyi in E:\workSpace\idea_workspace\vue_blog)
2020-04-24 22:43:05.790 DEBUG [main]com.kxingyi.blog.type.TypeTest.logStarting:56 -Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-04-24 22:43:05.790 INFO  [main]com.kxingyi.blog.type.TypeTest.logStartupProfileInfo:655 -The following profiles are active: dev
2020-04-24 22:43:12.953 INFO  [main]com.kxingyi.blog.VueBlogApplication.logStarting:55 -Starting VueBlogApplication on DESKTOP-UBAL805 with PID 28196 (E:\workSpace\idea_workspace\vue_blog\target\classes started by kxingyi in E:\workSpace\idea_workspace\vue_blog)
2020-04-24 22:43:12.956 DEBUG [main]com.kxingyi.blog.VueBlogApplication.logStarting:56 -Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-04-24 22:43:12.956 INFO  [main]com.kxingyi.blog.VueBlogApplication.logStartupProfileInfo:655 -The following profiles are active: dev
2020-04-24 22:43:13.728 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-24 22:43:13.730 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-04-24 22:43:13.759 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 24ms. Found 0 MongoDB repository interfaces.
2020-04-24 22:43:13.773 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-24 22:43:13.774 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-04-24 22:43:13.788 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
2020-04-24 22:43:14.146 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:43:14.239 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.kxingyi.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$889c8b54] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:43:14.281 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:43:14.293 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$68c70322] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:43:14.297 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$4f9ea764] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:43:14.300 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-24 22:43:14.348 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:43:14.363 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:43:14.384 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:43:15.110 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-24 22:43:15.110 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:43:15.173 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:43:15.362 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:43:15.368 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:43:15.376 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:43:15.380 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:43:15.382 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.kxingyi.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:43:15.384 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.kxingyi.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:43:15.386 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.kxingyi.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:43:15.419 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:43:15.443 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:43:15.719 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:92 -Tomcat initialized with port(s): 9000 (http)
2020-04-24 22:43:15.728 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-9000"]
2020-04-24 22:43:15.728 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-04-24 22:43:15.729 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-04-24 22:43:15.814 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-04-24 22:43:15.814 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 2820 ms
2020-04-24 22:43:17.232 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[127.0.0.1:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-24 22:43:17.232 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 127.0.0.1:27017 to client view of cluster
2020-04-24 22:43:17.283 INFO  [cluster-ClusterId{value='5ea2fb05394b970602864af9', description='null'}-127.0.0.1:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:55}] to 127.0.0.1:27017
2020-04-24 22:43:17.286 INFO  [cluster-ClusterId{value='5ea2fb05394b970602864af9', description='null'}-127.0.0.1:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 2]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=null, roundTripTimeNanos=1212500}
2020-04-24 22:43:17.287 INFO  [cluster-ClusterId{value='5ea2fb05394b970602864af9', description='null'}-127.0.0.1:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-04-24 22:43:18.118 INFO  [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:120 -Context refreshed
2020-04-24 22:43:18.130 INFO  [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:123 -Found 1 custom documentation plugin(s)
2020-04-24 22:43:18.140 INFO  [main]s.d.spring.web.scanners.ApiListingReferenceScanner.scan:44 -Scanning for api listing references
2020-04-24 22:43:18.221 WARN  [main]s.d.s.readers.operation.OperationImplicitParameterReader.maybeGetModelRef:88 -Coercing to be of type string. This may not even be a scalar type in actuality
2020-04-24 22:43:18.222 WARN  [main]s.d.s.readers.operation.OperationImplicitParameterReader.maybeGetModelRef:88 -Coercing to be of type string. This may not even be a scalar type in actuality
2020-04-24 22:43:18.296 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-9000"]
2020-04-24 22:43:18.317 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:204 -Tomcat started on port(s): 9000 (http) with context path ''
2020-04-24 22:43:18.319 INFO  [main]com.kxingyi.blog.VueBlogApplication.logStarted:61 -Started VueBlogApplication in 5.809 seconds (JVM running for 7.256)
2020-04-24 22:43:30.320 INFO  [http-nio-9000-exec-2]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-24 22:43:30.320 INFO  [http-nio-9000-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-04-24 22:43:30.334 INFO  [http-nio-9000-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 13 ms
2020-04-24 22:43:38.778 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:131 -请求地址 : /admin/login
2020-04-24 22:43:38.779 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:132 -请求方式 : POST
2020-04-24 22:43:38.780 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -IP : 0:0:0:0:0:0:0:1
2020-04-24 22:43:38.780 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:137 -方法 : com.kxingyi.blog.controller.AdminController.login
2020-04-24 22:43:38.780 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=lby, password=123456)]
2020-04-24 22:43:40.705 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 22:43:40.726 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=lby, password=123456)](String), 500(Integer), com.kxingyi.blog.exception.ParamsValidationException: null
	at com.kxingyi.blog.aspect.RequestAspect.doBefore(RequestAspect.java:61)
	at com.kxingyi.blog.aspect.RequestAspect.doAround(RequestAspect.java:68)
	at com.kxingyi.blog.controller.AdminController$$EnhancerBySpringCGLIB$$3d0e21fa.login(<generated>)
(String), POST(String), 0(Long), null, 0:0:0:0:0:0:0:1(String)
2020-04-24 22:43:40.733 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 22:43:40.737 ERROR [http-nio-9000-exec-2]com.kxingyi.blog.advice.BlogExceptionAdvice.exceptionHandler:26 -null
com.kxingyi.blog.exception.ParamsValidationException: null
	at com.kxingyi.blog.aspect.RequestAspect.doBefore(RequestAspect.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.kxingyi.blog.aspect.RequestAspect.doAround(RequestAspect.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.kxingyi.blog.controller.AdminController$$EnhancerBySpringCGLIB$$3d0e21fa.login(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-24 22:44:26.282 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:131 -请求地址 : /admin/login
2020-04-24 22:44:26.291 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:132 -请求方式 : POST
2020-04-24 22:44:26.300 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -IP : 0:0:0:0:0:0:0:1
2020-04-24 22:44:26.308 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:137 -方法 : com.kxingyi.blog.controller.AdminController.login
2020-04-24 22:44:26.316 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=lby, password=123456)]
2020-04-24 22:45:49.821 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 22:45:49.899 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=lby, password=123456)](String), 500(Integer), com.kxingyi.blog.exception.ParamsValidationException: null
	at com.kxingyi.blog.aspect.RequestAspect.doBefore(RequestAspect.java:61)
	at com.kxingyi.blog.aspect.RequestAspect.doAround(RequestAspect.java:68)
	at com.kxingyi.blog.controller.AdminController$$EnhancerBySpringCGLIB$$3d0e21fa.login(<generated>)
(String), POST(String), 0(Long), null, 0:0:0:0:0:0:0:1(String)
2020-04-24 22:45:49.926 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 22:46:19.458 ERROR [http-nio-9000-exec-3]com.kxingyi.blog.advice.BlogExceptionAdvice.exceptionHandler:26 -null
com.kxingyi.blog.exception.ParamsValidationException: null
	at com.kxingyi.blog.aspect.RequestAspect.doBefore(RequestAspect.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.kxingyi.blog.aspect.RequestAspect.doAround(RequestAspect.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.kxingyi.blog.controller.AdminController$$EnhancerBySpringCGLIB$$3d0e21fa.login(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-24 22:46:49.625 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:131 -请求地址 : /admin/login
2020-04-24 22:46:49.634 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:132 -请求方式 : POST
2020-04-24 22:46:49.643 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -IP : 0:0:0:0:0:0:0:1
2020-04-24 22:46:49.651 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:137 -方法 : com.kxingyi.blog.controller.AdminController.login
2020-04-24 22:46:49.659 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=lby, password=123456)]
2020-04-24 22:48:01.764 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 22:48:01.765 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=lby, password=123456)](String), 500(Integer), com.kxingyi.blog.exception.ParamsValidationException: null
	at com.kxingyi.blog.aspect.RequestAspect.doBefore(RequestAspect.java:61)
	at com.kxingyi.blog.aspect.RequestAspect.doAround(RequestAspect.java:68)
	at com.kxingyi.blog.controller.AdminController$$EnhancerBySpringCGLIB$$3d0e21fa.login(<generated>)
(String), POST(String), 0(Long), null, 0:0:0:0:0:0:0:1(String)
2020-04-24 22:48:01.770 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 22:48:01.770 ERROR [http-nio-9000-exec-4]com.kxingyi.blog.advice.BlogExceptionAdvice.exceptionHandler:26 -null
com.kxingyi.blog.exception.ParamsValidationException: null
	at com.kxingyi.blog.aspect.RequestAspect.doBefore(RequestAspect.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.kxingyi.blog.aspect.RequestAspect.doAround(RequestAspect.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.kxingyi.blog.controller.AdminController$$EnhancerBySpringCGLIB$$3d0e21fa.login(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-24 22:48:01.844 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-04-24 22:48:01.851 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-04-24 22:48:06.351 INFO  [main]com.kxingyi.blog.VueBlogApplication.logStarting:55 -Starting VueBlogApplication on DESKTOP-UBAL805 with PID 28280 (E:\workSpace\idea_workspace\vue_blog\target\classes started by kxingyi in E:\workSpace\idea_workspace\vue_blog)
2020-04-24 22:48:06.356 DEBUG [main]com.kxingyi.blog.VueBlogApplication.logStarting:56 -Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-04-24 22:48:06.356 INFO  [main]com.kxingyi.blog.VueBlogApplication.logStartupProfileInfo:655 -The following profiles are active: dev
2020-04-24 22:48:07.261 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-24 22:48:07.262 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-04-24 22:48:07.293 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 26ms. Found 0 MongoDB repository interfaces.
2020-04-24 22:48:07.307 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-24 22:48:07.309 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-04-24 22:48:07.323 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
2020-04-24 22:48:07.681 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:48:07.773 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.kxingyi.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$ba322d9c] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:48:07.816 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:48:07.828 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$9a5ca56a] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:48:07.832 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$813449ac] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:48:07.835 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-24 22:48:07.884 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:48:07.897 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:48:07.919 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:48:08.692 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-24 22:48:08.693 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:48:08.754 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:48:08.963 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:48:08.970 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:48:08.979 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:48:08.983 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:48:08.984 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.kxingyi.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:48:08.986 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.kxingyi.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:48:08.989 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.kxingyi.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:48:09.025 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:48:09.050 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:48:09.326 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:92 -Tomcat initialized with port(s): 9000 (http)
2020-04-24 22:48:09.337 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-9000"]
2020-04-24 22:48:09.338 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-04-24 22:48:09.338 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-04-24 22:48:09.435 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-04-24 22:48:09.435 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 3008 ms
2020-04-24 22:48:10.872 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[127.0.0.1:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-24 22:48:10.873 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 127.0.0.1:27017 to client view of cluster
2020-04-24 22:48:10.926 INFO  [cluster-ClusterId{value='5ea2fc2a3727851987e13f21', description='null'}-127.0.0.1:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:56}] to 127.0.0.1:27017
2020-04-24 22:48:10.944 INFO  [cluster-ClusterId{value='5ea2fc2a3727851987e13f21', description='null'}-127.0.0.1:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 2]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=null, roundTripTimeNanos=1024200}
2020-04-24 22:48:10.954 INFO  [cluster-ClusterId{value='5ea2fc2a3727851987e13f21', description='null'}-127.0.0.1:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-04-24 22:48:11.778 INFO  [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:120 -Context refreshed
2020-04-24 22:48:11.788 INFO  [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:123 -Found 1 custom documentation plugin(s)
2020-04-24 22:48:11.798 INFO  [main]s.d.spring.web.scanners.ApiListingReferenceScanner.scan:44 -Scanning for api listing references
2020-04-24 22:48:11.876 WARN  [main]s.d.s.readers.operation.OperationImplicitParameterReader.maybeGetModelRef:88 -Coercing to be of type string. This may not even be a scalar type in actuality
2020-04-24 22:48:11.877 WARN  [main]s.d.s.readers.operation.OperationImplicitParameterReader.maybeGetModelRef:88 -Coercing to be of type string. This may not even be a scalar type in actuality
2020-04-24 22:48:11.957 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-9000"]
2020-04-24 22:48:11.981 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:204 -Tomcat started on port(s): 9000 (http) with context path ''
2020-04-24 22:48:11.984 INFO  [main]com.kxingyi.blog.VueBlogApplication.logStarted:61 -Started VueBlogApplication in 6.141 seconds (JVM running for 7.029)
2020-04-24 22:48:22.410 INFO  [http-nio-9000-exec-2]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-24 22:48:22.410 INFO  [http-nio-9000-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-04-24 22:48:22.424 INFO  [http-nio-9000-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 14 ms
2020-04-24 22:48:24.578 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:131 -请求地址 : /admin/login
2020-04-24 22:48:24.579 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:132 -请求方式 : POST
2020-04-24 22:48:24.579 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -IP : 0:0:0:0:0:0:0:1
2020-04-24 22:48:24.579 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:137 -方法 : com.kxingyi.blog.controller.AdminController.login
2020-04-24 22:48:24.580 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=lby, password=123456)]
2020-04-24 22:48:25.279 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 22:48:25.300 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=lby, password=123456)](String), 500(Integer), com.kxingyi.blog.exception.ParamsValidationException: null
	at com.kxingyi.blog.aspect.RequestAspect.doBefore(RequestAspect.java:61)
	at com.kxingyi.blog.aspect.RequestAspect.doAround(RequestAspect.java:68)
	at com.kxingyi.blog.controller.AdminController$$EnhancerBySpringCGLIB$$19bd1274.login(<generated>)
(String), POST(String), 0(Long), null, 0:0:0:0:0:0:0:1(String)
2020-04-24 22:48:25.308 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 22:48:25.312 ERROR [http-nio-9000-exec-2]com.kxingyi.blog.advice.BlogExceptionAdvice.exceptionHandler:26 -null
com.kxingyi.blog.exception.ParamsValidationException: null
	at com.kxingyi.blog.aspect.RequestAspect.doBefore(RequestAspect.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.kxingyi.blog.aspect.RequestAspect.doAround(RequestAspect.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.kxingyi.blog.controller.AdminController$$EnhancerBySpringCGLIB$$19bd1274.login(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-24 22:48:42.427 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:131 -请求地址 : /admin/login
2020-04-24 22:48:42.436 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:132 -请求方式 : POST
2020-04-24 22:48:42.445 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -IP : 0:0:0:0:0:0:0:1
2020-04-24 22:48:42.454 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:137 -方法 : com.kxingyi.blog.controller.AdminController.login
2020-04-24 22:48:42.463 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=lby, password=123456)]
2020-04-24 22:50:58.074 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 22:50:58.075 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=lby, password=123456)](String), 500(Integer), com.kxingyi.blog.exception.ParamsValidationException: null
	at com.kxingyi.blog.aspect.RequestAspect.doBefore(RequestAspect.java:61)
	at com.kxingyi.blog.aspect.RequestAspect.doAround(RequestAspect.java:68)
	at com.kxingyi.blog.controller.AdminController$$EnhancerBySpringCGLIB$$19bd1274.login(<generated>)
(String), POST(String), 0(Long), null, 0:0:0:0:0:0:0:1(String)
2020-04-24 22:50:58.093 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 22:50:58.094 ERROR [http-nio-9000-exec-3]com.kxingyi.blog.advice.BlogExceptionAdvice.exceptionHandler:26 -null
com.kxingyi.blog.exception.ParamsValidationException: null
	at com.kxingyi.blog.aspect.RequestAspect.doBefore(RequestAspect.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:626)
	at org.springframework.aop.aspectj.AspectJMethodBeforeAdvice.before(AspectJMethodBeforeAdvice.java:44)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.kxingyi.blog.aspect.RequestAspect.doAround(RequestAspect.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.kxingyi.blog.controller.AdminController$$EnhancerBySpringCGLIB$$19bd1274.login(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-24 22:50:58.147 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-04-24 22:50:58.154 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-04-24 22:51:02.379 INFO  [main]com.kxingyi.blog.VueBlogApplication.logStarting:55 -Starting VueBlogApplication on DESKTOP-UBAL805 with PID 3760 (E:\workSpace\idea_workspace\vue_blog\target\classes started by kxingyi in E:\workSpace\idea_workspace\vue_blog)
2020-04-24 22:51:02.382 DEBUG [main]com.kxingyi.blog.VueBlogApplication.logStarting:56 -Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-04-24 22:51:02.382 INFO  [main]com.kxingyi.blog.VueBlogApplication.logStartupProfileInfo:655 -The following profiles are active: dev
2020-04-24 22:51:03.129 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-24 22:51:03.130 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-04-24 22:51:03.158 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 23ms. Found 0 MongoDB repository interfaces.
2020-04-24 22:51:03.175 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-24 22:51:03.176 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-04-24 22:51:03.190 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
2020-04-24 22:51:03.493 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:51:03.578 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.kxingyi.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$c9745ff2] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:51:03.618 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:51:03.629 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$a99ed7c0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:51:03.633 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$90767c02] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:51:03.637 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-24 22:51:03.689 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:51:03.704 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:51:03.727 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:51:04.408 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-24 22:51:04.408 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:51:04.469 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:51:04.638 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:51:04.644 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:51:04.651 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:51:04.655 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:51:04.657 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.kxingyi.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:51:04.659 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.kxingyi.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:51:04.661 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.kxingyi.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:51:04.691 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:51:04.713 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:51:04.941 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:92 -Tomcat initialized with port(s): 9000 (http)
2020-04-24 22:51:04.948 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-9000"]
2020-04-24 22:51:04.949 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-04-24 22:51:04.949 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-04-24 22:51:05.025 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-04-24 22:51:05.025 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 2609 ms
2020-04-24 22:51:06.257 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[127.0.0.1:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-24 22:51:06.258 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 127.0.0.1:27017 to client view of cluster
2020-04-24 22:51:06.300 INFO  [cluster-ClusterId{value='5ea2fcda88c6ba4b2bdeb6c4', description='null'}-127.0.0.1:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:57}] to 127.0.0.1:27017
2020-04-24 22:51:06.303 INFO  [cluster-ClusterId{value='5ea2fcda88c6ba4b2bdeb6c4', description='null'}-127.0.0.1:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 2]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=null, roundTripTimeNanos=875100}
2020-04-24 22:51:06.304 INFO  [cluster-ClusterId{value='5ea2fcda88c6ba4b2bdeb6c4', description='null'}-127.0.0.1:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-04-24 22:51:07.039 INFO  [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:120 -Context refreshed
2020-04-24 22:51:07.049 INFO  [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:123 -Found 1 custom documentation plugin(s)
2020-04-24 22:51:07.057 INFO  [main]s.d.spring.web.scanners.ApiListingReferenceScanner.scan:44 -Scanning for api listing references
2020-04-24 22:51:07.126 WARN  [main]s.d.s.readers.operation.OperationImplicitParameterReader.maybeGetModelRef:88 -Coercing to be of type string. This may not even be a scalar type in actuality
2020-04-24 22:51:07.127 WARN  [main]s.d.s.readers.operation.OperationImplicitParameterReader.maybeGetModelRef:88 -Coercing to be of type string. This may not even be a scalar type in actuality
2020-04-24 22:51:07.199 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-9000"]
2020-04-24 22:51:07.218 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:204 -Tomcat started on port(s): 9000 (http) with context path ''
2020-04-24 22:51:07.220 INFO  [main]com.kxingyi.blog.VueBlogApplication.logStarted:61 -Started VueBlogApplication in 5.23 seconds (JVM running for 5.9)
2020-04-24 22:51:17.595 INFO  [http-nio-9000-exec-2]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-24 22:51:17.596 INFO  [http-nio-9000-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-04-24 22:51:17.608 INFO  [http-nio-9000-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 12 ms
2020-04-24 22:51:17.647 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /admin/login
2020-04-24 22:51:17.647 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 22:51:17.648 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 22:51:17.649 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.AdminController.login
2020-04-24 22:51:17.649 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=lby, password=123456)]
2020-04-24 22:51:17.752 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select id, name, header, signature, comment, username, password from bl_admin WHERE username = ? 
2020-04-24 22:51:17.921 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: lby(String)
2020-04-24 22:51:17.940 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-04-24 22:51:17.948 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 301
2020-04-24 22:51:17.995 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"data":{"token":"880E7EF33D8B4ABBF9F1495920C43C59"},"msg":"操作成功！"}
2020-04-24 22:51:17.998 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 22:51:18.001 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=lby, password=123456)](String), 200(Integer), null, POST(String), 301(Long), {"code":200,"data":{"token":"880E7EF33D8B4ABBF9F1495920C43C59"},"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 22:51:18.006 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 22:52:38.026 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /admin/login
2020-04-24 22:52:38.026 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 22:52:38.026 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 22:52:38.027 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.AdminController.login
2020-04-24 22:52:38.027 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=lby, password=123456)]
2020-04-24 22:52:38.031 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select id, name, header, signature, comment, username, password from bl_admin WHERE username = ? 
2020-04-24 22:52:38.032 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: lby(String)
2020-04-24 22:52:38.034 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-04-24 22:52:38.035 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 9
2020-04-24 22:52:38.035 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"data":{"token":"880E7EF33D8B4ABBF9F1495920C43C59"},"msg":"操作成功！"}
2020-04-24 22:52:38.038 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 22:52:38.039 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=lby, password=123456)](String), 200(Integer), null, POST(String), 9(Long), {"code":200,"data":{"token":"880E7EF33D8B4ABBF9F1495920C43C59"},"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 22:52:38.043 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 22:56:29.811 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /admin/login
2020-04-24 22:56:29.811 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 22:56:29.812 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 22:56:29.812 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.AdminController.login
2020-04-24 22:56:29.812 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=lby, password=123456)]
2020-04-24 22:56:29.816 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select id, name, header, signature, comment, username, password from bl_admin WHERE username = ? 
2020-04-24 22:56:29.817 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: lby(String)
2020-04-24 22:56:29.819 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-04-24 22:56:29.819 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 8
2020-04-24 22:56:29.820 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"data":{"token":"880E7EF33D8B4ABBF9F1495920C43C59"},"msg":"操作成功！"}
2020-04-24 22:56:29.823 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 22:56:29.824 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=lby, password=123456)](String), 200(Integer), null, POST(String), 8(Long), {"code":200,"data":{"token":"880E7EF33D8B4ABBF9F1495920C43C59"},"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 22:56:29.829 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 22:56:31.551 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /admin/login
2020-04-24 22:56:31.552 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 22:56:31.552 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 22:56:31.552 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.AdminController.login
2020-04-24 22:56:31.552 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=lby, password=123456)]
2020-04-24 22:56:31.556 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select id, name, header, signature, comment, username, password from bl_admin WHERE username = ? 
2020-04-24 22:56:31.556 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: lby(String)
2020-04-24 22:56:31.559 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-04-24 22:56:31.560 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 9
2020-04-24 22:56:31.561 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"data":{"token":"880E7EF33D8B4ABBF9F1495920C43C59"},"msg":"操作成功！"}
2020-04-24 22:56:31.564 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 22:56:31.565 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=lby, password=123456)](String), 200(Integer), null, POST(String), 9(Long), {"code":200,"data":{"token":"880E7EF33D8B4ABBF9F1495920C43C59"},"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 22:56:31.570 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 22:56:32.205 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /admin/login
2020-04-24 22:56:32.206 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 22:56:32.206 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 22:56:32.206 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.AdminController.login
2020-04-24 22:56:32.206 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=lby, password=123456)]
2020-04-24 22:56:32.211 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select id, name, header, signature, comment, username, password from bl_admin WHERE username = ? 
2020-04-24 22:56:32.212 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: lby(String)
2020-04-24 22:56:32.214 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-04-24 22:56:32.215 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 10
2020-04-24 22:56:32.215 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"data":{"token":"880E7EF33D8B4ABBF9F1495920C43C59"},"msg":"操作成功！"}
2020-04-24 22:56:32.218 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 22:56:32.219 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=lby, password=123456)](String), 200(Integer), null, POST(String), 10(Long), {"code":200,"data":{"token":"880E7EF33D8B4ABBF9F1495920C43C59"},"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 22:56:32.223 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 22:56:32.769 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /admin/login
2020-04-24 22:56:32.770 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 22:56:32.770 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 22:56:32.770 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.AdminController.login
2020-04-24 22:56:32.770 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=lby, password=123456)]
2020-04-24 22:56:32.775 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select id, name, header, signature, comment, username, password from bl_admin WHERE username = ? 
2020-04-24 22:56:32.775 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: lby(String)
2020-04-24 22:56:32.777 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-04-24 22:56:32.778 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 9
2020-04-24 22:56:32.778 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"data":{"token":"880E7EF33D8B4ABBF9F1495920C43C59"},"msg":"操作成功！"}
2020-04-24 22:56:32.781 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 22:56:32.782 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=lby, password=123456)](String), 200(Integer), null, POST(String), 9(Long), {"code":200,"data":{"token":"880E7EF33D8B4ABBF9F1495920C43C59"},"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 22:56:32.789 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 22:56:33.302 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /admin/login
2020-04-24 22:56:33.303 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 22:56:33.303 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 22:56:33.303 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.AdminController.login
2020-04-24 22:56:33.303 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=lby, password=123456)]
2020-04-24 22:56:33.307 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select id, name, header, signature, comment, username, password from bl_admin WHERE username = ? 
2020-04-24 22:56:33.307 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: lby(String)
2020-04-24 22:56:33.310 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-04-24 22:56:33.311 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 9
2020-04-24 22:56:33.311 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"data":{"token":"880E7EF33D8B4ABBF9F1495920C43C59"},"msg":"操作成功！"}
2020-04-24 22:56:33.315 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 22:56:33.316 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=lby, password=123456)](String), 200(Integer), null, POST(String), 9(Long), {"code":200,"data":{"token":"880E7EF33D8B4ABBF9F1495920C43C59"},"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 22:56:33.320 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 22:56:33.512 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /admin/login
2020-04-24 22:56:33.512 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 22:56:33.513 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 22:56:33.513 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.AdminController.login
2020-04-24 22:56:33.513 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=lby, password=123456)]
2020-04-24 22:56:33.518 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select id, name, header, signature, comment, username, password from bl_admin WHERE username = ? 
2020-04-24 22:56:33.519 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: lby(String)
2020-04-24 22:56:33.521 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-04-24 22:56:33.522 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 10
2020-04-24 22:56:33.522 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"data":{"token":"880E7EF33D8B4ABBF9F1495920C43C59"},"msg":"操作成功！"}
2020-04-24 22:56:33.526 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 22:56:33.527 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=lby, password=123456)](String), 200(Integer), null, POST(String), 10(Long), {"code":200,"data":{"token":"880E7EF33D8B4ABBF9F1495920C43C59"},"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 22:56:33.531 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 22:56:33.722 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /admin/login
2020-04-24 22:56:33.722 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 22:56:33.722 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 22:56:33.722 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.AdminController.login
2020-04-24 22:56:33.723 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=lby, password=123456)]
2020-04-24 22:56:33.727 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select id, name, header, signature, comment, username, password from bl_admin WHERE username = ? 
2020-04-24 22:56:33.727 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: lby(String)
2020-04-24 22:56:33.729 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-04-24 22:56:33.730 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 8
2020-04-24 22:56:33.731 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"data":{"token":"880E7EF33D8B4ABBF9F1495920C43C59"},"msg":"操作成功！"}
2020-04-24 22:56:33.734 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 22:56:33.735 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=lby, password=123456)](String), 200(Integer), null, POST(String), 8(Long), {"code":200,"data":{"token":"880E7EF33D8B4ABBF9F1495920C43C59"},"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 22:56:33.739 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 22:57:37.449 ERROR [http-nio-9000-exec-7]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.kxingyi.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.kxingyi.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:55)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-24 22:57:37.449 ERROR [http-nio-9000-exec-7]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.kxingyi.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.kxingyi.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:55)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 25 common frames omitted
2020-04-24 22:57:56.208 ERROR [http-nio-9000-exec-8]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.kxingyi.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.kxingyi.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:55)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-24 22:57:56.209 ERROR [http-nio-9000-exec-8]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:175)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.kxingyi.blog.utils.ShiroUtils.getLoginUser(ShiroUtils.java:28)
	at com.kxingyi.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:55)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 25 common frames omitted
2020-04-24 22:58:03.761 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 22:58:03.762 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 22:58:03.762 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 22:58:03.762 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 22:58:03.762 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 22:58:03.771 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 22:58:03.772 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 22:58:03.776 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 22:58:03.776 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 15
2020-04-24 22:58:03.776 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：null
2020-04-24 22:58:03.780 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 22:58:03.781 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 15(Long), null(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 22:58:03.785 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 22:58:16.365 INFO  [main]com.kxingyi.blog.VueBlogApplication.logStarting:55 -Starting VueBlogApplication on DESKTOP-UBAL805 with PID 15460 (E:\workSpace\idea_workspace\vue_blog\target\classes started by kxingyi in E:\workSpace\idea_workspace\vue_blog)
2020-04-24 22:58:16.368 DEBUG [main]com.kxingyi.blog.VueBlogApplication.logStarting:56 -Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-04-24 22:58:16.368 INFO  [main]com.kxingyi.blog.VueBlogApplication.logStartupProfileInfo:655 -The following profiles are active: dev
2020-04-24 22:58:17.147 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-24 22:58:17.148 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-04-24 22:58:17.176 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 23ms. Found 0 MongoDB repository interfaces.
2020-04-24 22:58:17.189 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-24 22:58:17.190 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-04-24 22:58:17.203 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 5ms. Found 0 Redis repository interfaces.
2020-04-24 22:58:17.525 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:58:17.616 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.kxingyi.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$6059cea5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:58:17.657 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:58:17.669 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$40844673] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:58:17.672 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$275beab5] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:58:17.676 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-24 22:58:17.722 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:58:17.737 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:58:17.759 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:58:18.507 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-24 22:58:18.507 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:58:18.569 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:58:18.757 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:58:18.763 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:58:18.771 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:58:18.775 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:58:18.777 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.kxingyi.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:58:18.779 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.kxingyi.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:58:18.782 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.kxingyi.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:58:18.815 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:58:18.838 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 22:58:19.105 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:92 -Tomcat initialized with port(s): 9000 (http)
2020-04-24 22:58:19.113 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-9000"]
2020-04-24 22:58:19.114 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-04-24 22:58:19.114 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-04-24 22:58:19.196 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-04-24 22:58:19.197 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 2757 ms
2020-04-24 22:58:20.611 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[127.0.0.1:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-24 22:58:20.612 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 127.0.0.1:27017 to client view of cluster
2020-04-24 22:58:20.663 INFO  [cluster-ClusterId{value='5ea2fe8ccdc6a44ee0a0dbf2', description='null'}-127.0.0.1:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:58}] to 127.0.0.1:27017
2020-04-24 22:58:20.666 INFO  [cluster-ClusterId{value='5ea2fe8ccdc6a44ee0a0dbf2', description='null'}-127.0.0.1:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 2]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=null, roundTripTimeNanos=1026000}
2020-04-24 22:58:20.667 INFO  [cluster-ClusterId{value='5ea2fe8ccdc6a44ee0a0dbf2', description='null'}-127.0.0.1:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-04-24 22:58:21.491 INFO  [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:120 -Context refreshed
2020-04-24 22:58:21.502 INFO  [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:123 -Found 1 custom documentation plugin(s)
2020-04-24 22:58:21.511 INFO  [main]s.d.spring.web.scanners.ApiListingReferenceScanner.scan:44 -Scanning for api listing references
2020-04-24 22:58:21.586 WARN  [main]s.d.s.readers.operation.OperationImplicitParameterReader.maybeGetModelRef:88 -Coercing to be of type string. This may not even be a scalar type in actuality
2020-04-24 22:58:21.587 WARN  [main]s.d.s.readers.operation.OperationImplicitParameterReader.maybeGetModelRef:88 -Coercing to be of type string. This may not even be a scalar type in actuality
2020-04-24 22:58:21.661 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-9000"]
2020-04-24 22:58:21.681 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:204 -Tomcat started on port(s): 9000 (http) with context path ''
2020-04-24 22:58:21.684 INFO  [main]com.kxingyi.blog.VueBlogApplication.logStarted:61 -Started VueBlogApplication in 5.825 seconds (JVM running for 6.666)
2020-04-24 22:58:37.220 INFO  [http-nio-9000-exec-2]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-24 22:58:37.221 INFO  [http-nio-9000-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-04-24 22:58:37.233 INFO  [http-nio-9000-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 12 ms
2020-04-24 22:59:05.742 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /admin/login
2020-04-24 22:59:05.743 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 22:59:05.743 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 22:59:05.744 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.AdminController.login
2020-04-24 22:59:05.744 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=lby, password=123456)]
2020-04-24 22:59:06.341 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select id, name, header, signature, comment, username, password from bl_admin WHERE username = ? 
2020-04-24 22:59:06.392 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: lby(String)
2020-04-24 22:59:06.429 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-04-24 22:59:06.435 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 1375
2020-04-24 22:59:06.437 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"data":{"token":"E202857A0F9590926FE57FA6581000F0"},"msg":"操作成功！"}
2020-04-24 22:59:06.443 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 22:59:06.447 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=lby, password=123456)](String), 200(Integer), null, POST(String), 1375(Long), {"code":200,"data":{"token":"E202857A0F9590926FE57FA6581000F0"},"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 22:59:06.452 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 22:59:41.350 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 22:59:41.350 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 22:59:41.351 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 22:59:41.351 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 22:59:41.351 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 22:59:41.362 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 22:59:41.363 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 22:59:41.367 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 22:59:41.367 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 713
2020-04-24 22:59:41.368 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：null
2020-04-24 22:59:41.371 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 22:59:41.372 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 713(Long), null(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 22:59:41.376 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:00:21.689 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-04-24 23:00:21.696 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-04-24 23:00:25.881 INFO  [main]com.kxingyi.blog.VueBlogApplication.logStarting:55 -Starting VueBlogApplication on DESKTOP-UBAL805 with PID 27628 (E:\workSpace\idea_workspace\vue_blog\target\classes started by kxingyi in E:\workSpace\idea_workspace\vue_blog)
2020-04-24 23:00:25.884 DEBUG [main]com.kxingyi.blog.VueBlogApplication.logStarting:56 -Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-04-24 23:00:25.885 INFO  [main]com.kxingyi.blog.VueBlogApplication.logStartupProfileInfo:655 -The following profiles are active: dev
2020-04-24 23:00:26.648 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-24 23:00:26.649 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-04-24 23:00:26.678 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 24ms. Found 0 MongoDB repository interfaces.
2020-04-24 23:00:26.691 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-24 23:00:26.692 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-04-24 23:00:26.705 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
2020-04-24 23:00:27.025 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:00:27.116 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.kxingyi.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$f05e9700] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:00:27.158 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:00:27.169 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$d0890ece] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:00:27.173 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$b760b310] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:00:27.176 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-24 23:00:27.223 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:00:27.237 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:00:27.258 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:00:27.994 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-24 23:00:27.994 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:00:28.057 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:00:28.247 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:00:28.253 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:00:28.261 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:00:28.265 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:00:28.267 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.kxingyi.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:00:28.269 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.kxingyi.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:00:28.272 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.kxingyi.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:00:28.305 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:00:28.328 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:00:28.598 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:92 -Tomcat initialized with port(s): 9000 (http)
2020-04-24 23:00:28.607 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-9000"]
2020-04-24 23:00:28.607 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-04-24 23:00:28.607 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-04-24 23:00:28.689 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-04-24 23:00:28.690 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 2738 ms
2020-04-24 23:00:30.111 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[127.0.0.1:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-24 23:00:30.112 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 127.0.0.1:27017 to client view of cluster
2020-04-24 23:00:30.164 INFO  [cluster-ClusterId{value='5ea2ff0e481dc908546cead8', description='null'}-127.0.0.1:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:59}] to 127.0.0.1:27017
2020-04-24 23:00:30.167 INFO  [cluster-ClusterId{value='5ea2ff0e481dc908546cead8', description='null'}-127.0.0.1:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 2]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=null, roundTripTimeNanos=1066200}
2020-04-24 23:00:30.168 INFO  [cluster-ClusterId{value='5ea2ff0e481dc908546cead8', description='null'}-127.0.0.1:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-04-24 23:00:31.002 INFO  [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:120 -Context refreshed
2020-04-24 23:00:31.013 INFO  [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:123 -Found 1 custom documentation plugin(s)
2020-04-24 23:00:31.023 INFO  [main]s.d.spring.web.scanners.ApiListingReferenceScanner.scan:44 -Scanning for api listing references
2020-04-24 23:00:31.104 WARN  [main]s.d.s.readers.operation.OperationImplicitParameterReader.maybeGetModelRef:88 -Coercing to be of type string. This may not even be a scalar type in actuality
2020-04-24 23:00:31.106 WARN  [main]s.d.s.readers.operation.OperationImplicitParameterReader.maybeGetModelRef:88 -Coercing to be of type string. This may not even be a scalar type in actuality
2020-04-24 23:00:31.181 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-9000"]
2020-04-24 23:00:31.203 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:204 -Tomcat started on port(s): 9000 (http) with context path ''
2020-04-24 23:00:31.206 INFO  [main]com.kxingyi.blog.VueBlogApplication.logStarted:61 -Started VueBlogApplication in 5.851 seconds (JVM running for 6.676)
2020-04-24 23:01:00.823 INFO  [http-nio-9000-exec-2]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-24 23:01:00.823 INFO  [http-nio-9000-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-04-24 23:01:00.836 INFO  [http-nio-9000-exec-2]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 13 ms
2020-04-24 23:01:19.040 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /admin/login
2020-04-24 23:01:19.041 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:01:19.041 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:01:19.042 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.AdminController.login
2020-04-24 23:01:19.042 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=lby, password=123456)]
2020-04-24 23:01:19.259 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select id, name, header, signature, comment, username, password from bl_admin WHERE username = ? 
2020-04-24 23:01:19.281 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: lby(String)
2020-04-24 23:01:19.302 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-04-24 23:01:19.307 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 443
2020-04-24 23:01:19.309 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"data":{"token":"4FABA869ED95399F0B6EFC9C83CCC429"},"msg":"操作成功！"}
2020-04-24 23:01:19.314 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:01:19.317 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=lby, password=123456)](String), 200(Integer), null, POST(String), 443(Long), {"code":200,"data":{"token":"4FABA869ED95399F0B6EFC9C83CCC429"},"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:01:19.322 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:03:47.280 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:03:47.280 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:03:47.281 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:03:47.281 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:03:47.281 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:03:47.290 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:03:47.291 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:03:47.295 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:03:47.296 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 605
2020-04-24 23:03:47.296 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:03:47.300 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:03:47.301 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 605(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:03:47.305 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:06:26.438 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:06:26.439 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:06:26.439 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:06:26.439 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:06:26.440 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:06:26.444 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:06:26.445 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:06:26.449 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:06:26.449 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 624
2020-04-24 23:06:26.449 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:06:26.453 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:06:26.454 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 624(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:06:26.458 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:06:38.244 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:06:38.245 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:06:38.245 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:06:38.245 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:06:38.245 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:06:38.249 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:06:38.250 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:06:38.254 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:06:38.255 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 583
2020-04-24 23:06:38.255 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:06:38.259 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:06:38.260 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 583(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:06:38.264 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:06:58.425 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:06:58.425 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:06:58.426 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:06:58.426 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:06:58.426 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:06:58.431 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:06:58.432 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:06:58.436 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:06:58.437 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 12
2020-04-24 23:06:58.437 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:06:58.441 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:06:58.442 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 12(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:06:58.446 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:06:59.121 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:06:59.122 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:06:59.122 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:06:59.122 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:06:59.122 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:06:59.127 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:06:59.128 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:06:59.131 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:06:59.132 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 11
2020-04-24 23:06:59.132 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:06:59.136 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:06:59.137 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 11(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:06:59.141 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:06:59.652 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:06:59.652 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:06:59.652 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:06:59.652 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:06:59.653 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:06:59.657 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:06:59.658 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:06:59.663 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:06:59.663 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 11
2020-04-24 23:06:59.664 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:06:59.667 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:06:59.668 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 11(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:06:59.673 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:06:59.856 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:06:59.856 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:06:59.857 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:06:59.857 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:06:59.857 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:06:59.861 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:06:59.862 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:06:59.867 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:06:59.868 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 12
2020-04-24 23:06:59.868 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:06:59.872 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:06:59.873 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 12(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:06:59.878 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:00.057 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:00.058 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:00.058 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:00.058 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:00.058 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:00.063 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:00.064 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:00.070 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:00.070 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 13
2020-04-24 23:07:00.071 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:00.075 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:00.076 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 13(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:00.081 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:00.246 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:00.246 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:00.246 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:00.246 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:00.247 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:00.251 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:00.252 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:00.257 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:00.257 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 11
2020-04-24 23:07:00.257 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:00.261 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:00.262 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 11(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:00.266 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:00.446 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:00.446 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:00.447 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:00.447 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:00.447 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:00.451 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:00.452 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:00.456 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:00.457 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 11
2020-04-24 23:07:00.457 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:00.462 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:00.463 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 11(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:00.467 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:00.648 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:00.649 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:00.649 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:00.649 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:00.649 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:00.653 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:00.654 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:00.657 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:00.658 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 10
2020-04-24 23:07:00.658 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:00.661 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:00.662 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 10(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:00.665 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:00.869 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:00.869 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:00.869 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:00.869 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:00.869 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:00.873 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:00.874 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:00.878 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:00.878 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 9
2020-04-24 23:07:00.879 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:00.882 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:00.883 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 9(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:00.887 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:01.083 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:01.083 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:01.083 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:01.084 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:01.084 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:01.088 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:01.088 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:01.092 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:01.092 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 9
2020-04-24 23:07:01.092 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:01.096 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:01.097 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 9(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:01.101 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:01.305 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:01.305 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:01.305 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:01.305 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:01.306 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:01.310 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:01.310 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:01.314 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:01.315 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 10
2020-04-24 23:07:01.315 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:01.318 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:01.319 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 10(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:01.324 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:01.516 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:01.516 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:01.516 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:01.516 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:01.517 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:01.521 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:01.521 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:01.525 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:01.526 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 11
2020-04-24 23:07:01.527 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:01.530 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:01.532 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 11(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:01.536 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:01.729 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:01.729 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:01.729 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:01.729 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:01.729 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:01.733 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:01.734 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:01.738 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:01.738 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 9
2020-04-24 23:07:01.739 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:01.742 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:01.743 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 9(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:01.747 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:01.954 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:01.954 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:01.955 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:01.955 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:01.955 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:01.959 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:01.959 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:01.963 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:01.964 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 10
2020-04-24 23:07:01.964 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:01.968 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:01.968 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 10(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:01.972 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:02.161 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:02.162 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:02.162 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:02.162 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:02.162 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:02.166 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:02.167 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:02.171 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:02.171 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 10
2020-04-24 23:07:02.171 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:02.175 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:02.175 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 10(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:02.179 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:02.406 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:02.406 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:02.407 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:02.407 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:02.407 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:02.411 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:02.412 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:02.416 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:02.416 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 10
2020-04-24 23:07:02.416 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:02.420 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:02.420 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 10(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:02.424 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:02.620 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:02.620 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:02.620 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:02.620 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:02.621 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:02.625 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:02.625 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:02.630 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:02.630 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 10
2020-04-24 23:07:02.630 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:02.634 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:02.635 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 10(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:02.638 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:02.837 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:02.838 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:02.838 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:02.838 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:02.838 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:02.842 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:02.843 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:02.847 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:02.847 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 10
2020-04-24 23:07:02.848 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:02.851 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:02.852 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 10(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:02.856 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:03.071 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:03.071 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:03.071 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:03.071 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:03.071 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:03.075 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:03.076 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:03.080 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:03.081 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 10
2020-04-24 23:07:03.081 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:03.085 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:03.086 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 10(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:03.090 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:03.282 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:03.282 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:03.282 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:03.282 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:03.283 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:03.287 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:03.287 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:03.291 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:03.292 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 10
2020-04-24 23:07:03.292 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:03.295 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:03.296 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 10(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:03.300 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:03.511 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:03.511 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:03.511 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:03.511 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:03.511 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:03.515 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:03.516 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:03.520 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:03.520 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 9
2020-04-24 23:07:03.520 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:03.523 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:03.524 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 9(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:03.528 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:03.808 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:03.808 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:03.808 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:03.808 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:03.808 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:03.812 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:03.813 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:03.817 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:03.817 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 9
2020-04-24 23:07:03.817 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:03.820 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:03.821 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 9(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:03.824 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:04.042 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:04.042 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:04.042 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:04.043 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:04.043 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:04.047 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:04.047 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:04.051 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:04.051 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 9
2020-04-24 23:07:04.052 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:04.055 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:04.056 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 9(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:04.059 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:12.344 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:12.344 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:12.344 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:12.345 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:12.345 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:12.349 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:12.349 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:12.353 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:12.354 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 10
2020-04-24 23:07:12.354 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:12.357 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:12.358 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 10(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:12.362 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:12.969 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:12.969 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:12.970 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:12.970 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:12.970 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:12.974 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:12.974 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:12.978 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:12.979 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 10
2020-04-24 23:07:12.979 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:12.982 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:12.983 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 10(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:12.986 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:13.422 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:13.422 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:13.422 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:13.423 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:13.423 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:13.427 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:13.427 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:13.430 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:13.431 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 9
2020-04-24 23:07:13.431 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:13.434 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:13.435 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 9(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:13.438 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:13.668 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:13.668 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:13.669 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:13.669 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:13.669 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:13.673 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:13.674 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:13.678 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:13.678 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 10
2020-04-24 23:07:13.678 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:13.682 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:13.682 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 10(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:13.684 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:13.923 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:13.923 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:13.923 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:13.923 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:13.924 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:13.928 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:13.928 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:13.932 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:13.932 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 9
2020-04-24 23:07:13.932 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:13.935 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:13.936 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 9(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:13.939 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:14.203 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:14.204 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:14.204 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:14.204 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:14.204 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:14.209 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:14.209 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:14.212 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:14.213 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 10
2020-04-24 23:07:14.213 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:14.216 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:14.217 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 10(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:14.220 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:14.739 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:14.740 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:14.740 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:14.740 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:14.740 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:14.745 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:14.745 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:14.749 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:14.750 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 11
2020-04-24 23:07:14.750 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:14.753 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:14.753 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 11(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:14.758 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:15.028 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:15.028 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:15.028 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:15.028 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:15.029 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:15.033 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:15.033 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:15.038 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:15.038 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 10
2020-04-24 23:07:15.038 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:15.042 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:15.043 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 10(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:15.051 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:15.418 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:15.418 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:15.418 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:15.418 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:15.419 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:15.422 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:15.423 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:15.427 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:15.427 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 9
2020-04-24 23:07:15.428 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:15.431 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:15.431 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 9(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:15.434 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:15.719 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:15.719 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:15.720 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:15.720 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:15.720 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:15.724 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:15.725 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:15.729 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:15.730 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 11
2020-04-24 23:07:15.730 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:15.733 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:15.734 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 11(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:15.737 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:15.993 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:15.994 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:15.994 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:15.994 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:15.994 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:15.998 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:15.998 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:16.002 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:16.003 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 10
2020-04-24 23:07:16.003 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:16.007 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:16.008 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 10(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:16.012 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:16.319 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:16.319 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:16.319 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:16.320 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:16.320 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:16.324 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:16.325 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:16.329 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:16.329 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 10
2020-04-24 23:07:16.329 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:16.332 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:16.333 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 10(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:16.335 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:16.600 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:16.600 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:16.601 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:16.601 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:16.601 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:16.605 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:16.606 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:16.610 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:16.611 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 11
2020-04-24 23:07:16.611 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:16.614 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:16.615 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 11(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:16.618 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:16.878 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:16.878 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:16.878 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:16.878 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:16.878 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:16.882 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:16.883 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:16.886 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:16.887 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 9
2020-04-24 23:07:16.887 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:16.890 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:16.891 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 9(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:16.893 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:17.153 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:17.153 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:17.153 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:17.154 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:17.154 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:17.158 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:17.158 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:17.162 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:17.162 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 9
2020-04-24 23:07:17.163 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:17.166 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:17.167 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 9(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:17.171 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:17.411 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:17.411 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:17.412 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:17.412 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:17.412 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:17.416 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:17.417 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:17.421 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:17.422 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 11
2020-04-24 23:07:17.422 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:17.425 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:17.426 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 11(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:17.430 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:17.655 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:17.656 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:17.656 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:17.656 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:17.656 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:17.660 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:17.661 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:17.665 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:17.665 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 10
2020-04-24 23:07:17.666 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:17.669 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:17.670 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 10(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:17.674 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:18.091 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:18.091 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:18.091 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:18.092 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:18.092 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:18.096 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:18.096 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:18.100 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:18.100 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 9
2020-04-24 23:07:18.101 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:18.104 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:18.105 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 9(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:18.109 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:18.353 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:18.354 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:18.354 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:18.354 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:18.354 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:18.358 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:18.359 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:18.363 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:18.363 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 10
2020-04-24 23:07:18.363 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:18.367 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:18.367 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 10(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:18.371 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:18.595 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:18.596 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:18.596 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:18.596 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:18.596 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:18.600 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:18.601 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:18.605 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:18.605 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 10
2020-04-24 23:07:18.606 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:18.609 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:18.610 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 10(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:18.617 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:18.834 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:18.834 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:18.834 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:18.834 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:18.835 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:18.838 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:18.839 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:18.843 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:18.843 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 9
2020-04-24 23:07:18.844 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:18.847 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:18.848 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 9(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:18.851 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:19.094 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:19.094 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:19.094 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:19.094 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:19.094 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:19.098 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:19.099 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:19.102 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:19.102 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 8
2020-04-24 23:07:19.103 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:19.106 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:19.106 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 8(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:19.110 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:19.374 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:19.375 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:19.375 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:19.375 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:19.375 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:19.379 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:19.380 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:19.384 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:19.385 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 11
2020-04-24 23:07:19.385 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:19.389 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:19.389 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 11(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:19.392 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:19.596 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:19.596 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:19.597 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:19.597 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:19.597 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:19.601 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:19.601 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:19.605 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:19.606 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 10
2020-04-24 23:07:19.606 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:19.609 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:19.610 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 10(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:19.614 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:19.820 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:19.821 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:19.821 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:19.821 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:19.821 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:19.825 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:19.826 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:19.829 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:19.830 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 10
2020-04-24 23:07:19.830 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:19.834 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:19.834 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 10(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:19.838 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:20.058 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:20.058 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:20.058 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:20.059 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:20.059 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:20.063 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:20.064 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:20.068 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:20.068 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 10
2020-04-24 23:07:20.069 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:20.072 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:20.072 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 10(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:20.076 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:20.473 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:20.473 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:20.474 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:20.474 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:20.474 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:20.478 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:20.479 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:20.483 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:20.483 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 10
2020-04-24 23:07:20.484 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:20.487 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:20.488 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 10(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:20.490 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:20.757 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:20.757 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:20.757 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:20.757 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:20.758 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:20.762 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:20.762 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:20.767 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:20.767 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 10
2020-04-24 23:07:20.767 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:20.771 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:20.771 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 10(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:20.774 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:20.978 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:20.978 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:20.978 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:20.978 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:20.978 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:20.984 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:20.984 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:20.988 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:20.989 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 10
2020-04-24 23:07:20.989 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:20.992 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:20.993 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 10(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:21.000 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:21.207 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:21.208 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:21.208 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:21.208 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:21.208 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:21.212 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:21.213 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:21.217 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:21.218 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 11
2020-04-24 23:07:21.218 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:21.221 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:21.222 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 11(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:21.225 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:07:21.402 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:07:21.402 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:07:21.403 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:07:21.403 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:07:21.403 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:07:21.407 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:07:21.408 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:07:21.413 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:07:21.413 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 11
2020-04-24 23:07:21.414 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:07:21.418 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:07:21.419 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 11(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:07:21.424 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:20:09.182 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-04-24 23:20:09.188 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-04-24 23:20:13.935 INFO  [main]com.kxingyi.blog.VueBlogApplication.logStarting:55 -Starting VueBlogApplication on DESKTOP-UBAL805 with PID 24712 (E:\workSpace\idea_workspace\vue_blog\target\classes started by kxingyi in E:\workSpace\idea_workspace\vue_blog)
2020-04-24 23:20:13.938 DEBUG [main]com.kxingyi.blog.VueBlogApplication.logStarting:56 -Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-04-24 23:20:13.938 INFO  [main]com.kxingyi.blog.VueBlogApplication.logStartupProfileInfo:655 -The following profiles are active: dev
2020-04-24 23:20:14.986 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-24 23:20:14.987 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-04-24 23:20:15.022 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 30ms. Found 0 MongoDB repository interfaces.
2020-04-24 23:20:15.038 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-24 23:20:15.039 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-04-24 23:20:15.055 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
2020-04-24 23:20:15.481 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:20:15.586 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.kxingyi.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$7d254cb0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:20:15.642 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:20:15.654 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$5d4fc47e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:20:15.659 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$442768c0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:20:15.664 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-24 23:20:15.723 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:20:15.740 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:20:15.765 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:20:16.661 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-24 23:20:16.662 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:20:16.739 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:20:16.981 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:20:16.988 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:20:16.998 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:20:17.002 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:20:17.004 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.kxingyi.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:20:17.007 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.kxingyi.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:20:17.009 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.kxingyi.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:20:17.050 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:20:17.076 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:20:17.387 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:92 -Tomcat initialized with port(s): 9000 (http)
2020-04-24 23:20:17.397 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-9000"]
2020-04-24 23:20:17.398 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-04-24 23:20:17.398 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-04-24 23:20:17.506 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-04-24 23:20:17.507 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 3488 ms
2020-04-24 23:20:19.119 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[127.0.0.1:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-24 23:20:19.119 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 127.0.0.1:27017 to client view of cluster
2020-04-24 23:20:19.176 INFO  [cluster-ClusterId{value='5ea303b334d5157ae97b33e2', description='null'}-127.0.0.1:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:60}] to 127.0.0.1:27017
2020-04-24 23:20:19.180 INFO  [cluster-ClusterId{value='5ea303b334d5157ae97b33e2', description='null'}-127.0.0.1:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 2]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=null, roundTripTimeNanos=1296700}
2020-04-24 23:20:19.181 INFO  [cluster-ClusterId{value='5ea303b334d5157ae97b33e2', description='null'}-127.0.0.1:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-04-24 23:20:20.092 INFO  [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:120 -Context refreshed
2020-04-24 23:20:20.102 INFO  [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:123 -Found 1 custom documentation plugin(s)
2020-04-24 23:20:20.113 INFO  [main]s.d.spring.web.scanners.ApiListingReferenceScanner.scan:44 -Scanning for api listing references
2020-04-24 23:20:20.198 WARN  [main]s.d.s.readers.operation.OperationImplicitParameterReader.maybeGetModelRef:88 -Coercing to be of type string. This may not even be a scalar type in actuality
2020-04-24 23:20:20.201 WARN  [main]s.d.s.readers.operation.OperationImplicitParameterReader.maybeGetModelRef:88 -Coercing to be of type string. This may not even be a scalar type in actuality
2020-04-24 23:20:20.285 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-9000"]
2020-04-24 23:20:20.309 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:204 -Tomcat started on port(s): 9000 (http) with context path ''
2020-04-24 23:20:20.313 INFO  [main]com.kxingyi.blog.VueBlogApplication.logStarted:61 -Started VueBlogApplication in 6.949 seconds (JVM running for 7.894)
2020-04-24 23:20:29.987 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-04-24 23:20:30.000 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-04-24 23:20:34.759 INFO  [main]com.kxingyi.blog.VueBlogApplication.logStarting:55 -Starting VueBlogApplication on DESKTOP-UBAL805 with PID 28356 (E:\workSpace\idea_workspace\vue_blog\target\classes started by kxingyi in E:\workSpace\idea_workspace\vue_blog)
2020-04-24 23:20:34.764 DEBUG [main]com.kxingyi.blog.VueBlogApplication.logStarting:56 -Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-04-24 23:20:34.765 INFO  [main]com.kxingyi.blog.VueBlogApplication.logStartupProfileInfo:655 -The following profiles are active: dev
2020-04-24 23:20:35.720 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-24 23:20:35.722 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-04-24 23:20:35.755 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 27ms. Found 0 MongoDB repository interfaces.
2020-04-24 23:20:35.773 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-24 23:20:35.774 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-04-24 23:20:35.789 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
2020-04-24 23:20:36.162 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:20:36.261 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.kxingyi.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$b9f16725] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:20:36.304 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:20:36.316 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$9a1bdef3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:20:36.319 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$80f38335] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:20:36.323 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-24 23:20:36.374 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:20:36.390 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:20:36.413 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:20:37.223 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-24 23:20:37.224 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:20:37.290 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:20:37.499 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:20:37.505 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:20:37.514 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:20:37.518 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:20:37.520 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.kxingyi.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:20:37.522 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.kxingyi.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:20:37.524 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.kxingyi.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:20:37.559 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:20:37.584 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:20:37.871 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:92 -Tomcat initialized with port(s): 9000 (http)
2020-04-24 23:20:37.881 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-9000"]
2020-04-24 23:20:37.882 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-04-24 23:20:37.882 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-04-24 23:20:37.981 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-04-24 23:20:37.982 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 3142 ms
2020-04-24 23:20:39.504 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[127.0.0.1:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-24 23:20:39.505 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 127.0.0.1:27017 to client view of cluster
2020-04-24 23:20:39.562 INFO  [cluster-ClusterId{value='5ea303c792dd79600a97c08b', description='null'}-127.0.0.1:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:61}] to 127.0.0.1:27017
2020-04-24 23:20:39.566 INFO  [cluster-ClusterId{value='5ea303c792dd79600a97c08b', description='null'}-127.0.0.1:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 2]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=null, roundTripTimeNanos=1620700}
2020-04-24 23:20:39.568 INFO  [cluster-ClusterId{value='5ea303c792dd79600a97c08b', description='null'}-127.0.0.1:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-04-24 23:20:40.469 INFO  [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:120 -Context refreshed
2020-04-24 23:20:40.481 INFO  [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:123 -Found 1 custom documentation plugin(s)
2020-04-24 23:20:40.491 INFO  [main]s.d.spring.web.scanners.ApiListingReferenceScanner.scan:44 -Scanning for api listing references
2020-04-24 23:20:40.575 WARN  [main]s.d.s.readers.operation.OperationImplicitParameterReader.maybeGetModelRef:88 -Coercing to be of type string. This may not even be a scalar type in actuality
2020-04-24 23:20:40.577 WARN  [main]s.d.s.readers.operation.OperationImplicitParameterReader.maybeGetModelRef:88 -Coercing to be of type string. This may not even be a scalar type in actuality
2020-04-24 23:20:40.662 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-9000"]
2020-04-24 23:20:40.689 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:204 -Tomcat started on port(s): 9000 (http) with context path ''
2020-04-24 23:20:40.692 INFO  [main]com.kxingyi.blog.VueBlogApplication.logStarted:61 -Started VueBlogApplication in 6.505 seconds (JVM running for 7.433)
2020-04-24 23:20:57.900 INFO  [http-nio-9000-exec-3]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-24 23:20:57.900 INFO  [http-nio-9000-exec-3]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-04-24 23:20:57.913 INFO  [http-nio-9000-exec-3]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 12 ms
2020-04-24 23:20:59.912 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /admin/login
2020-04-24 23:20:59.914 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:20:59.914 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:20:59.914 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.AdminController.login
2020-04-24 23:20:59.915 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=lby, password=123456)]
2020-04-24 23:21:00.338 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select id, name, header, signature, comment, username, password from bl_admin WHERE username = ? 
2020-04-24 23:21:00.380 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: lby(String)
2020-04-24 23:21:00.421 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-04-24 23:21:00.440 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 683
2020-04-24 23:21:00.577 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"data":{"token":"2968F8A137EA5F93D3639E8237AE05B4"},"msg":"操作成功！"}
2020-04-24 23:21:00.586 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:21:00.591 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=lby, password=123456)](String), 200(Integer), null, POST(String), 683(Long), {"code":200,"data":{"token":"2968F8A137EA5F93D3639E8237AE05B4"},"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:21:00.609 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:21:38.769 ERROR [http-nio-9000-exec-4]com.kxingyi.blog.advice.BlogExceptionAdvice.exceptionHandler:26 -认证失败
com.kxingyi.blog.exception.BlogException: 认证失败
	at com.kxingyi.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:56)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-24 23:21:56.855 ERROR [http-nio-9000-exec-2]com.kxingyi.blog.advice.BlogExceptionAdvice.exceptionHandler:26 -认证失败
com.kxingyi.blog.exception.BlogException: 认证失败
	at com.kxingyi.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:56)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-24 23:21:57.661 ERROR [http-nio-9000-exec-5]com.kxingyi.blog.advice.BlogExceptionAdvice.exceptionHandler:26 -认证失败
com.kxingyi.blog.exception.BlogException: 认证失败
	at com.kxingyi.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:56)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-24 23:22:00.362 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:22:00.362 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:22:00.362 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:22:00.363 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:22:00.363 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:22:00.372 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:22:00.373 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:22:00.377 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:22:00.378 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 16
2020-04-24 23:22:00.378 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:22:00.382 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:22:00.383 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 16(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:22:00.387 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:22:01.053 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:22:01.054 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:22:01.054 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:22:01.054 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:22:01.054 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:22:01.059 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:22:01.060 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:22:01.064 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:22:01.065 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 12
2020-04-24 23:22:01.065 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:22:01.068 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:22:01.070 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 12(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:22:01.074 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:22:01.287 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:22:01.287 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:22:01.288 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:22:01.288 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:22:01.288 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:22:01.293 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:22:01.294 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:22:01.299 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:22:01.299 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 12
2020-04-24 23:22:01.300 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:22:01.303 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:22:01.305 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 12(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:22:01.311 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:22:01.489 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:22:01.490 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:22:01.490 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:22:01.491 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:22:01.491 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:22:01.496 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:22:01.497 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:22:01.501 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:22:01.502 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 13
2020-04-24 23:22:01.502 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:22:01.506 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:22:01.507 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 13(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:22:01.514 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:22:01.704 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:22:01.704 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:22:01.705 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:22:01.705 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:22:01.705 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:22:01.712 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:22:01.714 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:22:01.718 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:22:01.719 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 15
2020-04-24 23:22:01.719 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:22:01.723 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:22:01.724 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 15(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:22:01.731 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:22:01.914 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:22:01.914 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:22:01.915 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:22:01.915 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:22:01.915 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:22:01.920 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:22:01.920 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:22:01.927 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:22:01.927 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 13
2020-04-24 23:22:01.928 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:22:01.931 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:22:01.932 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 13(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:22:01.937 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:22:02.116 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:22:02.116 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:22:02.116 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:22:02.117 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:22:02.117 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:22:02.121 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:22:02.122 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:22:02.126 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:22:02.127 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 11
2020-04-24 23:22:02.127 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:22:02.131 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:22:02.132 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 11(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:22:02.137 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:22:02.331 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:22:02.332 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:22:02.332 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:22:02.332 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:22:02.332 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:22:02.336 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:22:02.337 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:22:02.343 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:22:02.344 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 13
2020-04-24 23:22:02.344 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:22:02.348 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:22:02.349 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 13(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:22:02.355 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:22:02.551 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:22:02.552 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:22:02.552 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:22:02.552 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:22:02.552 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:22:02.557 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:22:02.558 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:22:02.562 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:22:02.563 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 12
2020-04-24 23:22:02.563 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:22:02.567 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:22:02.568 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 12(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:22:02.572 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:22:02.784 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:22:02.785 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:22:02.785 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:22:02.785 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:22:02.785 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:22:02.794 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:22:02.796 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:22:02.807 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:22:02.807 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 23
2020-04-24 23:22:02.808 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:22:02.812 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:22:02.813 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 23(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:22:02.818 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:22:02.982 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:22:02.982 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:22:02.982 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:22:02.982 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:22:02.982 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:22:02.987 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:22:02.988 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:22:02.996 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:22:02.997 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 15
2020-04-24 23:22:02.997 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:22:03.001 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:22:03.002 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 15(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:22:03.010 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:22:03.184 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:22:03.184 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:22:03.184 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:22:03.185 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:22:03.185 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:22:03.189 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:22:03.190 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:22:03.200 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:22:03.200 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 16
2020-04-24 23:22:03.201 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:22:03.205 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:22:03.206 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 16(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:22:03.212 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:22:03.398 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:22:03.398 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:22:03.398 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:22:03.399 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:22:03.399 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:22:03.404 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:22:03.404 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:22:03.410 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:22:03.410 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 12
2020-04-24 23:22:03.410 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:22:03.414 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:22:03.414 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 12(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:22:03.418 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:22:03.595 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:22:03.595 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:22:03.595 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:22:03.596 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:22:03.596 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:22:03.601 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:22:03.602 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:22:03.611 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:22:03.612 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 17
2020-04-24 23:22:03.612 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:22:03.616 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:22:03.616 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 17(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:22:03.620 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:22:03.801 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:22:03.802 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:22:03.802 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:22:03.802 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:22:03.802 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:22:03.807 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:22:03.809 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:22:03.814 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:22:03.814 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 13
2020-04-24 23:22:03.815 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:22:03.818 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:22:03.820 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 13(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:22:03.825 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:22:03.982 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:22:03.982 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:22:03.982 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:22:03.982 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:22:03.982 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:22:03.987 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:22:03.988 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:22:03.993 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:22:03.994 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 12
2020-04-24 23:22:03.994 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:22:03.998 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:22:03.999 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 12(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:22:04.003 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:22:04.169 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:22:04.170 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:22:04.170 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:22:04.170 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:22:04.170 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:22:04.175 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:22:04.176 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:22:04.180 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:22:04.180 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 11
2020-04-24 23:22:04.181 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:22:04.184 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:22:04.185 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 11(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:22:04.189 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:22:04.382 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:22:04.382 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:22:04.382 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:22:04.382 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:22:04.382 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:22:04.386 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:22:04.387 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:22:04.394 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:22:04.395 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 13
2020-04-24 23:22:04.395 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:22:04.399 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:22:04.400 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 13(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:22:04.403 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:22:04.568 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:22:04.568 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:22:04.568 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:22:04.568 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:22:04.568 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:22:04.573 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:22:04.574 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:22:04.579 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:22:04.580 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 12
2020-04-24 23:22:04.580 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:22:04.584 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:22:04.584 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 12(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:22:04.588 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:22:04.798 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:22:04.799 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:22:04.799 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:22:04.799 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:22:04.799 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:22:04.803 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:22:04.804 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:22:04.808 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:22:04.809 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 11
2020-04-24 23:22:04.809 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:22:04.813 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:22:04.814 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 11(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:22:04.818 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:22:04.995 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:22:04.995 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:22:04.995 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:22:04.996 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:22:04.996 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:22:05.001 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:22:05.001 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:22:05.005 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:22:05.006 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 11
2020-04-24 23:22:05.006 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:22:05.010 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:22:05.011 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 11(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:22:05.016 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:22:05.195 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:22:05.196 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:22:05.196 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:22:05.196 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:22:05.197 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:22:05.202 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==>  Preparing: insert into bl_type(type_name) values( ? ) 
2020-04-24 23:22:05.203 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:22:05.210 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.TypeMapper.insert.debug:159 -<==    Updates: 1
2020-04-24 23:22:05.211 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 16
2020-04-24 23:22:05.211 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"msg":"操作成功！"}
2020-04-24 23:22:05.216 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:22:05.216 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 200(Integer), null, POST(String), 16(Long), {"code":200,"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:22:05.220 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:22:07.631 ERROR [http-nio-9000-exec-8]com.kxingyi.blog.advice.BlogExceptionAdvice.exceptionHandler:26 -认证失败
com.kxingyi.blog.exception.BlogException: 认证失败
	at com.kxingyi.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:56)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-24 23:22:08.324 ERROR [http-nio-9000-exec-9]com.kxingyi.blog.advice.BlogExceptionAdvice.exceptionHandler:26 -认证失败
com.kxingyi.blog.exception.BlogException: 认证失败
	at com.kxingyi.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:56)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-24 23:22:08.536 ERROR [http-nio-9000-exec-10]com.kxingyi.blog.advice.BlogExceptionAdvice.exceptionHandler:26 -认证失败
com.kxingyi.blog.exception.BlogException: 认证失败
	at com.kxingyi.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:56)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-24 23:22:08.768 ERROR [http-nio-9000-exec-1]com.kxingyi.blog.advice.BlogExceptionAdvice.exceptionHandler:26 -认证失败
com.kxingyi.blog.exception.BlogException: 认证失败
	at com.kxingyi.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:56)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-24 23:22:08.919 ERROR [http-nio-9000-exec-3]com.kxingyi.blog.advice.BlogExceptionAdvice.exceptionHandler:26 -认证失败
com.kxingyi.blog.exception.BlogException: 认证失败
	at com.kxingyi.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:56)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-24 23:22:09.114 ERROR [http-nio-9000-exec-4]com.kxingyi.blog.advice.BlogExceptionAdvice.exceptionHandler:26 -认证失败
com.kxingyi.blog.exception.BlogException: 认证失败
	at com.kxingyi.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:56)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-24 23:22:09.337 ERROR [http-nio-9000-exec-2]com.kxingyi.blog.advice.BlogExceptionAdvice.exceptionHandler:26 -认证失败
com.kxingyi.blog.exception.BlogException: 认证失败
	at com.kxingyi.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:56)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-24 23:22:09.547 ERROR [http-nio-9000-exec-5]com.kxingyi.blog.advice.BlogExceptionAdvice.exceptionHandler:26 -认证失败
com.kxingyi.blog.exception.BlogException: 认证失败
	at com.kxingyi.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:56)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-24 23:22:09.725 ERROR [http-nio-9000-exec-6]com.kxingyi.blog.advice.BlogExceptionAdvice.exceptionHandler:26 -认证失败
com.kxingyi.blog.exception.BlogException: 认证失败
	at com.kxingyi.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:56)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-24 23:22:09.902 ERROR [http-nio-9000-exec-7]com.kxingyi.blog.advice.BlogExceptionAdvice.exceptionHandler:26 -认证失败
com.kxingyi.blog.exception.BlogException: 认证失败
	at com.kxingyi.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:56)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-24 23:22:10.073 ERROR [http-nio-9000-exec-8]com.kxingyi.blog.advice.BlogExceptionAdvice.exceptionHandler:26 -认证失败
com.kxingyi.blog.exception.BlogException: 认证失败
	at com.kxingyi.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:56)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-24 23:23:32.394 INFO  [SpringContextShutdownHook]o.s.jmx.export.annotation.AnnotationMBeanExporter.doUnregister:211 -Could not unregister MBean [com.github.tobato.fastdfs.domain.conn:name=fdfsConnectionPool,type=FdfsConnectionPool] as said MBean is not registered (perhaps already unregistered by an external process)
2020-04-24 23:23:32.403 INFO  [SpringContextShutdownHook]com.alibaba.druid.pool.DruidDataSource.close:1825 -{dataSource-1} closed
2020-04-24 23:23:37.065 INFO  [main]com.kxingyi.blog.VueBlogApplication.logStarting:55 -Starting VueBlogApplication on DESKTOP-UBAL805 with PID 2752 (E:\workSpace\idea_workspace\vue_blog\target\classes started by kxingyi in E:\workSpace\idea_workspace\vue_blog)
2020-04-24 23:23:37.068 DEBUG [main]com.kxingyi.blog.VueBlogApplication.logStarting:56 -Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-04-24 23:23:37.068 INFO  [main]com.kxingyi.blog.VueBlogApplication.logStartupProfileInfo:655 -The following profiles are active: dev
2020-04-24 23:23:37.987 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-24 23:23:37.989 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-04-24 23:23:38.022 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 26ms. Found 0 MongoDB repository interfaces.
2020-04-24 23:23:38.035 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-24 23:23:38.036 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-04-24 23:23:38.049 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 5ms. Found 0 Redis repository interfaces.
2020-04-24 23:23:38.397 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:23:38.491 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.kxingyi.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$ab7bcd12] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:23:38.534 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:23:38.548 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$8ba644e0] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:23:38.552 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$727de922] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:23:38.555 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-24 23:23:38.611 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:23:38.630 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:23:38.655 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:23:39.441 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-24 23:23:39.442 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:23:39.508 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:23:39.694 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:23:39.701 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:23:39.710 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:23:39.714 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:23:39.716 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.kxingyi.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:23:39.718 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.kxingyi.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:23:39.720 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.kxingyi.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:23:39.751 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:23:39.775 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:23:40.042 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:92 -Tomcat initialized with port(s): 9000 (http)
2020-04-24 23:23:40.049 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-9000"]
2020-04-24 23:23:40.050 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-04-24 23:23:40.050 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-04-24 23:23:40.126 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-04-24 23:23:40.126 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 3014 ms
2020-04-24 23:23:41.441 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[127.0.0.1:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-24 23:23:41.441 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 127.0.0.1:27017 to client view of cluster
2020-04-24 23:23:41.493 INFO  [cluster-ClusterId{value='5ea3047dc9e14d33a2e75ece', description='null'}-127.0.0.1:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:62}] to 127.0.0.1:27017
2020-04-24 23:23:41.496 INFO  [cluster-ClusterId{value='5ea3047dc9e14d33a2e75ece', description='null'}-127.0.0.1:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 2]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=null, roundTripTimeNanos=1207200}
2020-04-24 23:23:41.497 INFO  [cluster-ClusterId{value='5ea3047dc9e14d33a2e75ece', description='null'}-127.0.0.1:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-04-24 23:23:42.307 INFO  [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:120 -Context refreshed
2020-04-24 23:23:42.316 INFO  [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:123 -Found 1 custom documentation plugin(s)
2020-04-24 23:23:42.324 INFO  [main]s.d.spring.web.scanners.ApiListingReferenceScanner.scan:44 -Scanning for api listing references
2020-04-24 23:23:42.398 WARN  [main]s.d.s.readers.operation.OperationImplicitParameterReader.maybeGetModelRef:88 -Coercing to be of type string. This may not even be a scalar type in actuality
2020-04-24 23:23:42.399 WARN  [main]s.d.s.readers.operation.OperationImplicitParameterReader.maybeGetModelRef:88 -Coercing to be of type string. This may not even be a scalar type in actuality
2020-04-24 23:23:42.488 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-9000"]
2020-04-24 23:23:42.509 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:204 -Tomcat started on port(s): 9000 (http) with context path ''
2020-04-24 23:23:42.512 INFO  [main]com.kxingyi.blog.VueBlogApplication.logStarted:61 -Started VueBlogApplication in 5.941 seconds (JVM running for 6.676)
2020-04-24 23:49:40.857 INFO  [main]com.kxingyi.blog.VueBlogApplication.logStarting:55 -Starting VueBlogApplication on DESKTOP-UBAL805 with PID 26524 (E:\workSpace\idea_workspace\vue_blog\target\classes started by kxingyi in E:\workSpace\idea_workspace\vue_blog)
2020-04-24 23:49:40.861 DEBUG [main]com.kxingyi.blog.VueBlogApplication.logStarting:56 -Running with Spring Boot v2.2.2.RELEASE, Spring v5.2.2.RELEASE
2020-04-24 23:49:40.862 INFO  [main]com.kxingyi.blog.VueBlogApplication.logStartupProfileInfo:655 -The following profiles are active: dev
2020-04-24 23:49:41.803 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-24 23:49:41.804 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2020-04-24 23:49:41.834 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 25ms. Found 0 MongoDB repository interfaces.
2020-04-24 23:49:41.850 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.multipleStoresDetected:249 -Multiple Spring Data modules found, entering strict repository configuration mode!
2020-04-24 23:49:41.852 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:127 -Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-04-24 23:49:41.864 INFO  [main]o.s.d.repository.config.RepositoryConfigurationDelegate.registerRepositoriesIn:187 -Finished Spring Data repository scanning in 6ms. Found 0 Redis repository interfaces.
2020-04-24 23:49:42.174 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:49:42.283 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'shiroConfig' of type [com.kxingyi.blog.config.ShiroConfig$$EnhancerBySpringCGLIB$$85e5f6bd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:49:42.332 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'mybatis-org.mybatis.spring.boot.autoconfigure.MybatisProperties' of type [org.mybatis.spring.boot.autoconfigure.MybatisProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:49:42.346 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration' of type [org.mybatis.spring.boot.autoconfigure.MybatisAutoConfiguration$$EnhancerBySpringCGLIB$$66106e8b] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:49:42.351 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceAutoConfigure$$EnhancerBySpringCGLIB$$4ce812cd] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:49:42.354 INFO  [main]c.a.d.s.boot.autoconfigure.DruidDataSourceAutoConfigure.dataSource:56 -Init DruidDataSource
2020-04-24 23:49:42.406 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'spring.datasource-org.springframework.boot.autoconfigure.jdbc.DataSourceProperties' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:49:42.424 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration' of type [com.alibaba.druid.spring.boot.autoconfigure.stat.DruidFilterConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:49:42.451 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'statFilter' of type [com.alibaba.druid.filter.stat.StatFilter] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:49:43.281 INFO  [main]com.alibaba.druid.pool.DruidDataSource.init:930 -{dataSource-1} inited
2020-04-24 23:49:43.282 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'dataSource' of type [com.alibaba.druid.spring.boot.autoconfigure.DruidDataSourceWrapper] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:49:43.350 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker' of type [org.springframework.boot.autoconfigure.jdbc.DataSourceInitializerInvoker] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:49:43.544 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionFactory' of type [org.apache.ibatis.session.defaults.DefaultSqlSessionFactory] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:49:43.552 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'sqlSessionTemplate' of type [org.mybatis.spring.SqlSessionTemplate] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:49:43.560 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [org.mybatis.spring.mapper.MapperFactoryBean] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:49:43.565 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminMapper' of type [com.sun.proxy.$Proxy96] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:49:43.567 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminServiceImpl' of type [com.kxingyi.blog.service.impl.AdminServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:49:43.569 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'userServiceImpl' of type [com.kxingyi.blog.service.impl.UserServiceImpl] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:49:43.572 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'adminRealm' of type [com.kxingyi.blog.realm.AdminRealm] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:49:43.606 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'securityManager' of type [org.apache.shiro.web.mgt.DefaultWebSecurityManager] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:49:43.632 INFO  [main]o.s.c.s.PostProcessorRegistrationDelegate$BeanPostProcessorChecker.postProcessAfterInitialization:330 -Bean 'authorizationAttributeSourceAdvisor' of type [org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-24 23:49:43.900 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.initialize:92 -Tomcat initialized with port(s): 9000 (http)
2020-04-24 23:49:43.909 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Initializing ProtocolHandler ["http-nio-9000"]
2020-04-24 23:49:43.910 INFO  [main]org.apache.catalina.core.StandardService.log:173 -Starting service [Tomcat]
2020-04-24 23:49:43.910 INFO  [main]org.apache.catalina.core.StandardEngine.log:173 -Starting Servlet engine: [Apache Tomcat/9.0.29]
2020-04-24 23:49:43.998 INFO  [main]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring embedded WebApplicationContext
2020-04-24 23:49:43.999 INFO  [main]org.springframework.web.context.ContextLoader.prepareWebApplicationContext:284 -Root WebApplicationContext: initialization completed in 3080 ms
2020-04-24 23:49:45.338 INFO  [main]org.mongodb.driver.cluster.info:71 -Cluster created with settings {hosts=[127.0.0.1:27017], mode=MULTIPLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms', maxWaitQueueSize=500}
2020-04-24 23:49:45.338 INFO  [main]org.mongodb.driver.cluster.info:71 -Adding discovered server 127.0.0.1:27017 to client view of cluster
2020-04-24 23:49:45.385 INFO  [cluster-ClusterId{value='5ea30a99b486e55122d02f31', description='null'}-127.0.0.1:27017]org.mongodb.driver.connection.info:71 -Opened connection [connectionId{localValue:1, serverValue:63}] to 127.0.0.1:27017
2020-04-24 23:49:45.388 INFO  [cluster-ClusterId{value='5ea30a99b486e55122d02f31', description='null'}-127.0.0.1:27017]org.mongodb.driver.cluster.info:71 -Monitor thread successfully connected to server with description ServerDescription{address=127.0.0.1:27017, type=STANDALONE, state=CONNECTED, ok=true, version=ServerVersion{versionList=[3, 4, 2]}, minWireVersion=0, maxWireVersion=5, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=null, roundTripTimeNanos=961100}
2020-04-24 23:49:45.389 INFO  [cluster-ClusterId{value='5ea30a99b486e55122d02f31', description='null'}-127.0.0.1:27017]org.mongodb.driver.cluster.info:71 -Discovered cluster type of STANDALONE
2020-04-24 23:49:46.213 INFO  [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:120 -Context refreshed
2020-04-24 23:49:46.223 INFO  [main]s.d.spring.web.plugins.DocumentationPluginsBootstrapper.start:123 -Found 1 custom documentation plugin(s)
2020-04-24 23:49:46.231 INFO  [main]s.d.spring.web.scanners.ApiListingReferenceScanner.scan:44 -Scanning for api listing references
2020-04-24 23:49:46.301 WARN  [main]s.d.s.readers.operation.OperationImplicitParameterReader.maybeGetModelRef:88 -Coercing to be of type string. This may not even be a scalar type in actuality
2020-04-24 23:49:46.303 WARN  [main]s.d.s.readers.operation.OperationImplicitParameterReader.maybeGetModelRef:88 -Coercing to be of type string. This may not even be a scalar type in actuality
2020-04-24 23:49:46.372 INFO  [main]org.apache.coyote.http11.Http11NioProtocol.log:173 -Starting ProtocolHandler ["http-nio-9000"]
2020-04-24 23:49:46.413 INFO  [main]o.s.boot.web.embedded.tomcat.TomcatWebServer.start:204 -Tomcat started on port(s): 9000 (http) with context path ''
2020-04-24 23:49:46.417 INFO  [main]com.kxingyi.blog.VueBlogApplication.logStarted:61 -Started VueBlogApplication in 6.15 seconds (JVM running for 6.974)
2020-04-24 23:49:51.353 INFO  [http-nio-9000-exec-4]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].[/].log:173 -Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-04-24 23:49:51.353 INFO  [http-nio-9000-exec-4]org.springframework.web.servlet.DispatcherServlet.initServletBean:525 -Initializing Servlet 'dispatcherServlet'
2020-04-24 23:49:51.364 INFO  [http-nio-9000-exec-4]org.springframework.web.servlet.DispatcherServlet.initServletBean:547 -Completed initialization in 11 ms
2020-04-24 23:49:51.403 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /admin/login
2020-04-24 23:49:51.404 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:49:51.404 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:49:51.406 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.AdminController.login
2020-04-24 23:49:51.407 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Admin(id=null, name=null, header=null, signature=null, comment=null, username=lby, password=123456)]
2020-04-24 23:49:51.493 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.AdminMapper.getByUsername.debug:159 -==>  Preparing: select id, name, header, signature, comment, username, password from bl_admin WHERE username = ? 
2020-04-24 23:49:51.670 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.AdminMapper.getByUsername.debug:159 -==> Parameters: lby(String)
2020-04-24 23:49:51.689 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.AdminMapper.getByUsername.debug:159 -<==      Total: 1
2020-04-24 23:49:51.698 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 295
2020-04-24 23:49:51.746 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"data":{"token":"10FA9632F24511E4C61DC3287E4770A7"},"msg":"操作成功！"}
2020-04-24 23:49:51.750 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:49:51.753 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /admin/login(String), [Admin(id=null, name=null, header=null, signature=null, comment=null, username=lby, password=123456)](String), 200(Integer), null, POST(String), 295(Long), {"code":200,"data":{"token":"10FA9632F24511E4C61DC3287E4770A7"},"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:49:51.758 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:50:03.153 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:50:03.153 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:50:03.153 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:50:03.153 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:50:03.154 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:50:03.163 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.TypeMapper.getByName.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable, deleted from bl_type where type_name = ? 
2020-04-24 23:50:03.164 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.TypeMapper.getByName.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:50:03.172 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.TypeMapper.getByName.debug:159 -<==      Total: 81
2020-04-24 23:50:03.179 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:50:03.180 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 500(Integer), org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 81
	at com.kxingyi.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:31)
	at com.kxingyi.blog.controller.TypeController.insertType(TypeController.java:20)
	at com.kxingyi.blog.controller.TypeController$$FastClassBySpringCGLIB$$f1151ad2.invoke(<generated>)
	at com.kxingyi.blog.aspect.RequestAspect.doAround(RequestAspect.java:68)
	at com.kxingyi.blog.controller.TypeController$$EnhancerBySpringCGLIB$$3a6b6fcd.insertType(<generated>)
Caused by: org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 81
(String), POST(String), 0(Long), null, 0:0:0:0:0:0:0:1(String)
2020-04-24 23:50:03.188 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:50:03.195 ERROR [http-nio-9000-exec-7]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] in context with path [] threw exception [Request processing failed; nested exception is org.mybatis.spring.MyBatisSystemException: nested exception is org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 81] with root cause
org.apache.ibatis.exceptions.TooManyResultsException: Expected one result (or null) to be returned by selectOne(), but found: 81
	at org.apache.ibatis.session.defaults.DefaultSqlSession.selectOne(DefaultSqlSession.java:81)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.mybatis.spring.SqlSessionTemplate$SqlSessionInterceptor.invoke(SqlSessionTemplate.java:433)
	at com.sun.proxy.$Proxy95.selectOne(Unknown Source)
	at org.mybatis.spring.SqlSessionTemplate.selectOne(SqlSessionTemplate.java:166)
	at org.apache.ibatis.binding.MapperMethod.execute(MapperMethod.java:83)
	at org.apache.ibatis.binding.MapperProxy.invoke(MapperProxy.java:59)
	at com.sun.proxy.$Proxy107.getByName(Unknown Source)
	at com.kxingyi.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:31)
	at com.kxingyi.blog.controller.TypeController.insertType(TypeController.java:20)
	at com.kxingyi.blog.controller.TypeController$$FastClassBySpringCGLIB$$f1151ad2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.kxingyi.blog.aspect.RequestAspect.doAround(RequestAspect.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.kxingyi.blog.controller.TypeController$$EnhancerBySpringCGLIB$$3a6b6fcd.insertType(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-24 23:50:03.201 ERROR [http-nio-9000-exec-7]o.a.c.c.C.[Tomcat].[localhost].[/].[dispatcherServlet].log:175 -Servlet.service() for servlet [dispatcherServlet] threw exception
org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.kxingyi.blog.utils.ShiroUtils.getSessionId(ShiroUtils.java:37)
	at com.kxingyi.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:56)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-24 23:50:03.201 ERROR [http-nio-9000-exec-7]o.a.catalina.core.ContainerBase.[Tomcat].[localhost].log:175 -Exception Processing ErrorPage[errorCode=0, location=/error]
org.springframework.web.util.NestedServletException: Request processing failed; nested exception is org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.ApplicationDispatcher.invoke(ApplicationDispatcher.java:712)
	at org.apache.catalina.core.ApplicationDispatcher.processRequest(ApplicationDispatcher.java:461)
	at org.apache.catalina.core.ApplicationDispatcher.doForward(ApplicationDispatcher.java:384)
	at org.apache.catalina.core.ApplicationDispatcher.forward(ApplicationDispatcher.java:312)
	at org.apache.catalina.core.StandardHostValve.custom(StandardHostValve.java:394)
	at org.apache.catalina.core.StandardHostValve.status(StandardHostValve.java:253)
	at org.apache.catalina.core.StandardHostValve.throwable(StandardHostValve.java:348)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:173)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
Caused by: org.apache.shiro.UnavailableSecurityManagerException: No SecurityManager accessible to the calling code, either bound to the org.apache.shiro.util.ThreadContext or as a vm static singleton.  This is an invalid application configuration.
	at org.apache.shiro.SecurityUtils.getSecurityManager(SecurityUtils.java:123)
	at org.apache.shiro.subject.Subject$Builder.<init>(Subject.java:627)
	at org.apache.shiro.SecurityUtils.getSubject(SecurityUtils.java:56)
	at com.kxingyi.blog.utils.ShiroUtils.getSessionId(ShiroUtils.java:37)
	at com.kxingyi.blog.interceptor.LoginInterceptor.preHandle(LoginInterceptor.java:56)
	at org.springframework.web.servlet.HandlerExecutionChain.applyPreHandle(HandlerExecutionChain.java:141)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1035)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	... 26 common frames omitted
2020-04-24 23:51:51.744 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:51:51.744 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:51:51.744 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:51:51.745 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:51:51.745 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:51:51.750 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.TypeMapper.getByName.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable, deleted from bl_type where type_name = ? 
2020-04-24 23:51:51.751 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.TypeMapper.getByName.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:51:51.753 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.TypeMapper.getByName.debug:159 -<==      Total: 1
2020-04-24 23:51:51.759 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:51:51.760 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 500(Integer), com.kxingyi.blog.exception.BusinessException: 该分类已存在
	at com.kxingyi.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:33)
	at com.kxingyi.blog.controller.TypeController.insertType(TypeController.java:20)
	at com.kxingyi.blog.controller.TypeController$$FastClassBySpringCGLIB$$f1151ad2.invoke(<generated>)
	at com.kxingyi.blog.aspect.RequestAspect.doAround(RequestAspect.java:68)
	at com.kxingyi.blog.controller.TypeController$$EnhancerBySpringCGLIB$$3a6b6fcd.insertType(<generated>)
(String), POST(String), 0(Long), null, 0:0:0:0:0:0:0:1(String)
2020-04-24 23:51:51.764 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:51:51.766 ERROR [http-nio-9000-exec-9]com.kxingyi.blog.advice.BlogExceptionAdvice.exceptionHandler:26 -该分类已存在
com.kxingyi.blog.exception.BusinessException: 该分类已存在
	at com.kxingyi.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:33)
	at com.kxingyi.blog.controller.TypeController.insertType(TypeController.java:20)
	at com.kxingyi.blog.controller.TypeController$$FastClassBySpringCGLIB$$f1151ad2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.kxingyi.blog.aspect.RequestAspect.doAround(RequestAspect.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.kxingyi.blog.controller.TypeController$$EnhancerBySpringCGLIB$$3a6b6fcd.insertType(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-24 23:51:53.667 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:51:53.668 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:51:53.668 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:51:53.668 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:51:53.668 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:51:53.674 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.TypeMapper.getByName.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable, deleted from bl_type where type_name = ? 
2020-04-24 23:51:53.674 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.TypeMapper.getByName.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:51:53.676 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.TypeMapper.getByName.debug:159 -<==      Total: 1
2020-04-24 23:51:53.680 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:51:53.681 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 500(Integer), com.kxingyi.blog.exception.BusinessException: 该分类已存在
	at com.kxingyi.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:33)
	at com.kxingyi.blog.controller.TypeController.insertType(TypeController.java:20)
	at com.kxingyi.blog.controller.TypeController$$FastClassBySpringCGLIB$$f1151ad2.invoke(<generated>)
	at com.kxingyi.blog.aspect.RequestAspect.doAround(RequestAspect.java:68)
	at com.kxingyi.blog.controller.TypeController$$EnhancerBySpringCGLIB$$3a6b6fcd.insertType(<generated>)
(String), POST(String), 0(Long), null, 0:0:0:0:0:0:0:1(String)
2020-04-24 23:51:53.685 DEBUG [http-nio-9000-exec-6]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:51:53.685 ERROR [http-nio-9000-exec-6]com.kxingyi.blog.advice.BlogExceptionAdvice.exceptionHandler:26 -该分类已存在
com.kxingyi.blog.exception.BusinessException: 该分类已存在
	at com.kxingyi.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:33)
	at com.kxingyi.blog.controller.TypeController.insertType(TypeController.java:20)
	at com.kxingyi.blog.controller.TypeController$$FastClassBySpringCGLIB$$f1151ad2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.kxingyi.blog.aspect.RequestAspect.doAround(RequestAspect.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.kxingyi.blog.controller.TypeController$$EnhancerBySpringCGLIB$$3a6b6fcd.insertType(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-24 23:51:54.354 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:51:54.354 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:51:54.354 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:51:54.354 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:51:54.355 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:51:54.358 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.TypeMapper.getByName.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable, deleted from bl_type where type_name = ? 
2020-04-24 23:51:54.359 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.TypeMapper.getByName.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:51:54.361 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.TypeMapper.getByName.debug:159 -<==      Total: 1
2020-04-24 23:51:54.365 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:51:54.367 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 500(Integer), com.kxingyi.blog.exception.BusinessException: 该分类已存在
	at com.kxingyi.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:33)
	at com.kxingyi.blog.controller.TypeController.insertType(TypeController.java:20)
	at com.kxingyi.blog.controller.TypeController$$FastClassBySpringCGLIB$$f1151ad2.invoke(<generated>)
	at com.kxingyi.blog.aspect.RequestAspect.doAround(RequestAspect.java:68)
	at com.kxingyi.blog.controller.TypeController$$EnhancerBySpringCGLIB$$3a6b6fcd.insertType(<generated>)
(String), POST(String), 0(Long), null, 0:0:0:0:0:0:0:1(String)
2020-04-24 23:51:54.370 DEBUG [http-nio-9000-exec-3]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:51:54.371 ERROR [http-nio-9000-exec-3]com.kxingyi.blog.advice.BlogExceptionAdvice.exceptionHandler:26 -该分类已存在
com.kxingyi.blog.exception.BusinessException: 该分类已存在
	at com.kxingyi.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:33)
	at com.kxingyi.blog.controller.TypeController.insertType(TypeController.java:20)
	at com.kxingyi.blog.controller.TypeController$$FastClassBySpringCGLIB$$f1151ad2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.kxingyi.blog.aspect.RequestAspect.doAround(RequestAspect.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.kxingyi.blog.controller.TypeController$$EnhancerBySpringCGLIB$$3a6b6fcd.insertType(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-24 23:51:54.592 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:51:54.592 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:51:54.593 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:51:54.593 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:51:54.593 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:51:54.597 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.TypeMapper.getByName.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable, deleted from bl_type where type_name = ? 
2020-04-24 23:51:54.598 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.TypeMapper.getByName.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:51:54.600 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.TypeMapper.getByName.debug:159 -<==      Total: 1
2020-04-24 23:51:54.605 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:51:54.606 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 500(Integer), com.kxingyi.blog.exception.BusinessException: 该分类已存在
	at com.kxingyi.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:33)
	at com.kxingyi.blog.controller.TypeController.insertType(TypeController.java:20)
	at com.kxingyi.blog.controller.TypeController$$FastClassBySpringCGLIB$$f1151ad2.invoke(<generated>)
	at com.kxingyi.blog.aspect.RequestAspect.doAround(RequestAspect.java:68)
	at com.kxingyi.blog.controller.TypeController$$EnhancerBySpringCGLIB$$3a6b6fcd.insertType(<generated>)
(String), POST(String), 0(Long), null, 0:0:0:0:0:0:0:1(String)
2020-04-24 23:51:54.610 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:51:54.611 ERROR [http-nio-9000-exec-8]com.kxingyi.blog.advice.BlogExceptionAdvice.exceptionHandler:26 -该分类已存在
com.kxingyi.blog.exception.BusinessException: 该分类已存在
	at com.kxingyi.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:33)
	at com.kxingyi.blog.controller.TypeController.insertType(TypeController.java:20)
	at com.kxingyi.blog.controller.TypeController$$FastClassBySpringCGLIB$$f1151ad2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.kxingyi.blog.aspect.RequestAspect.doAround(RequestAspect.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.kxingyi.blog.controller.TypeController$$EnhancerBySpringCGLIB$$3a6b6fcd.insertType(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-24 23:51:54.816 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:51:54.816 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:51:54.816 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:51:54.817 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:51:54.817 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:51:54.821 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.TypeMapper.getByName.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable, deleted from bl_type where type_name = ? 
2020-04-24 23:51:54.822 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.TypeMapper.getByName.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:51:54.825 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.TypeMapper.getByName.debug:159 -<==      Total: 1
2020-04-24 23:51:54.830 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:51:54.831 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 500(Integer), com.kxingyi.blog.exception.BusinessException: 该分类已存在
	at com.kxingyi.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:33)
	at com.kxingyi.blog.controller.TypeController.insertType(TypeController.java:20)
	at com.kxingyi.blog.controller.TypeController$$FastClassBySpringCGLIB$$f1151ad2.invoke(<generated>)
	at com.kxingyi.blog.aspect.RequestAspect.doAround(RequestAspect.java:68)
	at com.kxingyi.blog.controller.TypeController$$EnhancerBySpringCGLIB$$3a6b6fcd.insertType(<generated>)
(String), POST(String), 0(Long), null, 0:0:0:0:0:0:0:1(String)
2020-04-24 23:51:54.835 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:51:54.836 ERROR [http-nio-9000-exec-2]com.kxingyi.blog.advice.BlogExceptionAdvice.exceptionHandler:26 -该分类已存在
com.kxingyi.blog.exception.BusinessException: 该分类已存在
	at com.kxingyi.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:33)
	at com.kxingyi.blog.controller.TypeController.insertType(TypeController.java:20)
	at com.kxingyi.blog.controller.TypeController$$FastClassBySpringCGLIB$$f1151ad2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.kxingyi.blog.aspect.RequestAspect.doAround(RequestAspect.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.kxingyi.blog.controller.TypeController$$EnhancerBySpringCGLIB$$3a6b6fcd.insertType(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-24 23:51:55.024 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:51:55.024 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:51:55.025 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:51:55.025 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:51:55.025 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:51:55.030 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.TypeMapper.getByName.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable, deleted from bl_type where type_name = ? 
2020-04-24 23:51:55.031 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.TypeMapper.getByName.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:51:55.033 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.TypeMapper.getByName.debug:159 -<==      Total: 1
2020-04-24 23:51:55.038 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:51:55.039 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 500(Integer), com.kxingyi.blog.exception.BusinessException: 该分类已存在
	at com.kxingyi.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:33)
	at com.kxingyi.blog.controller.TypeController.insertType(TypeController.java:20)
	at com.kxingyi.blog.controller.TypeController$$FastClassBySpringCGLIB$$f1151ad2.invoke(<generated>)
	at com.kxingyi.blog.aspect.RequestAspect.doAround(RequestAspect.java:68)
	at com.kxingyi.blog.controller.TypeController$$EnhancerBySpringCGLIB$$3a6b6fcd.insertType(<generated>)
(String), POST(String), 0(Long), null, 0:0:0:0:0:0:0:1(String)
2020-04-24 23:51:55.044 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:51:55.045 ERROR [http-nio-9000-exec-5]com.kxingyi.blog.advice.BlogExceptionAdvice.exceptionHandler:26 -该分类已存在
com.kxingyi.blog.exception.BusinessException: 该分类已存在
	at com.kxingyi.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:33)
	at com.kxingyi.blog.controller.TypeController.insertType(TypeController.java:20)
	at com.kxingyi.blog.controller.TypeController$$FastClassBySpringCGLIB$$f1151ad2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.kxingyi.blog.aspect.RequestAspect.doAround(RequestAspect.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.kxingyi.blog.controller.TypeController$$EnhancerBySpringCGLIB$$3a6b6fcd.insertType(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-24 23:51:55.226 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:51:55.227 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:51:55.227 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:51:55.227 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:51:55.227 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:51:55.232 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.TypeMapper.getByName.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable, deleted from bl_type where type_name = ? 
2020-04-24 23:51:55.233 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.TypeMapper.getByName.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:51:55.235 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.TypeMapper.getByName.debug:159 -<==      Total: 1
2020-04-24 23:51:55.241 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:51:55.242 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 500(Integer), com.kxingyi.blog.exception.BusinessException: 该分类已存在
	at com.kxingyi.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:33)
	at com.kxingyi.blog.controller.TypeController.insertType(TypeController.java:20)
	at com.kxingyi.blog.controller.TypeController$$FastClassBySpringCGLIB$$f1151ad2.invoke(<generated>)
	at com.kxingyi.blog.aspect.RequestAspect.doAround(RequestAspect.java:68)
	at com.kxingyi.blog.controller.TypeController$$EnhancerBySpringCGLIB$$3a6b6fcd.insertType(<generated>)
(String), POST(String), 0(Long), null, 0:0:0:0:0:0:0:1(String)
2020-04-24 23:51:55.247 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:51:55.248 ERROR [http-nio-9000-exec-10]com.kxingyi.blog.advice.BlogExceptionAdvice.exceptionHandler:26 -该分类已存在
com.kxingyi.blog.exception.BusinessException: 该分类已存在
	at com.kxingyi.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:33)
	at com.kxingyi.blog.controller.TypeController.insertType(TypeController.java:20)
	at com.kxingyi.blog.controller.TypeController$$FastClassBySpringCGLIB$$f1151ad2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.kxingyi.blog.aspect.RequestAspect.doAround(RequestAspect.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.kxingyi.blog.controller.TypeController$$EnhancerBySpringCGLIB$$3a6b6fcd.insertType(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-24 23:51:55.428 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:51:55.428 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:51:55.428 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:51:55.429 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:51:55.429 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:51:55.433 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.TypeMapper.getByName.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable, deleted from bl_type where type_name = ? 
2020-04-24 23:51:55.434 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.TypeMapper.getByName.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:51:55.437 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.TypeMapper.getByName.debug:159 -<==      Total: 1
2020-04-24 23:51:55.442 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:51:55.443 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 500(Integer), com.kxingyi.blog.exception.BusinessException: 该分类已存在
	at com.kxingyi.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:33)
	at com.kxingyi.blog.controller.TypeController.insertType(TypeController.java:20)
	at com.kxingyi.blog.controller.TypeController$$FastClassBySpringCGLIB$$f1151ad2.invoke(<generated>)
	at com.kxingyi.blog.aspect.RequestAspect.doAround(RequestAspect.java:68)
	at com.kxingyi.blog.controller.TypeController$$EnhancerBySpringCGLIB$$3a6b6fcd.insertType(<generated>)
(String), POST(String), 0(Long), {"code":200,"data":{"token":"10FA9632F24511E4C61DC3287E4770A7"},"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:51:55.447 DEBUG [http-nio-9000-exec-4]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:51:55.448 ERROR [http-nio-9000-exec-4]com.kxingyi.blog.advice.BlogExceptionAdvice.exceptionHandler:26 -该分类已存在
com.kxingyi.blog.exception.BusinessException: 该分类已存在
	at com.kxingyi.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:33)
	at com.kxingyi.blog.controller.TypeController.insertType(TypeController.java:20)
	at com.kxingyi.blog.controller.TypeController$$FastClassBySpringCGLIB$$f1151ad2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.kxingyi.blog.aspect.RequestAspect.doAround(RequestAspect.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.kxingyi.blog.controller.TypeController$$EnhancerBySpringCGLIB$$3a6b6fcd.insertType(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-24 23:51:55.623 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:51:55.624 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:51:55.624 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:51:55.624 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:51:55.624 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:51:55.628 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.TypeMapper.getByName.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable, deleted from bl_type where type_name = ? 
2020-04-24 23:51:55.629 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.TypeMapper.getByName.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:51:55.631 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.TypeMapper.getByName.debug:159 -<==      Total: 1
2020-04-24 23:51:55.636 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:51:55.637 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 500(Integer), com.kxingyi.blog.exception.BusinessException: 该分类已存在
	at com.kxingyi.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:33)
	at com.kxingyi.blog.controller.TypeController.insertType(TypeController.java:20)
	at com.kxingyi.blog.controller.TypeController$$FastClassBySpringCGLIB$$f1151ad2.invoke(<generated>)
	at com.kxingyi.blog.aspect.RequestAspect.doAround(RequestAspect.java:68)
	at com.kxingyi.blog.controller.TypeController$$EnhancerBySpringCGLIB$$3a6b6fcd.insertType(<generated>)
(String), POST(String), 0(Long), null, 0:0:0:0:0:0:0:1(String)
2020-04-24 23:51:55.642 DEBUG [http-nio-9000-exec-7]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:51:55.643 ERROR [http-nio-9000-exec-7]com.kxingyi.blog.advice.BlogExceptionAdvice.exceptionHandler:26 -该分类已存在
com.kxingyi.blog.exception.BusinessException: 该分类已存在
	at com.kxingyi.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:33)
	at com.kxingyi.blog.controller.TypeController.insertType(TypeController.java:20)
	at com.kxingyi.blog.controller.TypeController$$FastClassBySpringCGLIB$$f1151ad2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.kxingyi.blog.aspect.RequestAspect.doAround(RequestAspect.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.kxingyi.blog.controller.TypeController$$EnhancerBySpringCGLIB$$3a6b6fcd.insertType(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-24 23:51:55.831 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:51:55.831 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:51:55.832 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:51:55.832 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:51:55.832 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:51:55.837 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.TypeMapper.getByName.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable, deleted from bl_type where type_name = ? 
2020-04-24 23:51:55.837 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.TypeMapper.getByName.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:51:55.839 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.TypeMapper.getByName.debug:159 -<==      Total: 1
2020-04-24 23:51:55.844 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:51:55.845 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 500(Integer), com.kxingyi.blog.exception.BusinessException: 该分类已存在
	at com.kxingyi.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:33)
	at com.kxingyi.blog.controller.TypeController.insertType(TypeController.java:20)
	at com.kxingyi.blog.controller.TypeController$$FastClassBySpringCGLIB$$f1151ad2.invoke(<generated>)
	at com.kxingyi.blog.aspect.RequestAspect.doAround(RequestAspect.java:68)
	at com.kxingyi.blog.controller.TypeController$$EnhancerBySpringCGLIB$$3a6b6fcd.insertType(<generated>)
(String), POST(String), 0(Long), null, 0:0:0:0:0:0:0:1(String)
2020-04-24 23:51:55.849 DEBUG [http-nio-9000-exec-1]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:51:55.850 ERROR [http-nio-9000-exec-1]com.kxingyi.blog.advice.BlogExceptionAdvice.exceptionHandler:26 -该分类已存在
com.kxingyi.blog.exception.BusinessException: 该分类已存在
	at com.kxingyi.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:33)
	at com.kxingyi.blog.controller.TypeController.insertType(TypeController.java:20)
	at com.kxingyi.blog.controller.TypeController$$FastClassBySpringCGLIB$$f1151ad2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.kxingyi.blog.aspect.RequestAspect.doAround(RequestAspect.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.kxingyi.blog.controller.TypeController$$EnhancerBySpringCGLIB$$3a6b6fcd.insertType(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-24 23:51:56.012 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/insertType
2020-04-24 23:51:56.013 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:51:56.013 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:51:56.013 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.insertType
2020-04-24 23:51:56.014 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)]
2020-04-24 23:51:56.018 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.TypeMapper.getByName.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable, deleted from bl_type where type_name = ? 
2020-04-24 23:51:56.019 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.TypeMapper.getByName.debug:159 -==> Parameters: ssssssss(String)
2020-04-24 23:51:56.022 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.TypeMapper.getByName.debug:159 -<==      Total: 1
2020-04-24 23:51:56.026 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:51:56.028 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/insertType(String), [Type(typeId=1, typeName=ssssssss, typeBlogCount=null, enable=null, deleted=null)](String), 500(Integer), com.kxingyi.blog.exception.BusinessException: 该分类已存在
	at com.kxingyi.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:33)
	at com.kxingyi.blog.controller.TypeController.insertType(TypeController.java:20)
	at com.kxingyi.blog.controller.TypeController$$FastClassBySpringCGLIB$$f1151ad2.invoke(<generated>)
	at com.kxingyi.blog.aspect.RequestAspect.doAround(RequestAspect.java:68)
	at com.kxingyi.blog.controller.TypeController$$EnhancerBySpringCGLIB$$3a6b6fcd.insertType(<generated>)
(String), POST(String), 0(Long), null, 0:0:0:0:0:0:0:1(String)
2020-04-24 23:51:56.032 DEBUG [http-nio-9000-exec-9]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:51:56.033 ERROR [http-nio-9000-exec-9]com.kxingyi.blog.advice.BlogExceptionAdvice.exceptionHandler:26 -该分类已存在
com.kxingyi.blog.exception.BusinessException: 该分类已存在
	at com.kxingyi.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:33)
	at com.kxingyi.blog.controller.TypeController.insertType(TypeController.java:20)
	at com.kxingyi.blog.controller.TypeController$$FastClassBySpringCGLIB$$f1151ad2.invoke(<generated>)
	at org.springframework.cglib.proxy.MethodProxy.invoke(MethodProxy.java:218)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.invokeJoinpoint(CglibAopProxy.java:769)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:163)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.MethodBeforeAdviceInterceptor.invoke(MethodBeforeAdviceInterceptor.java:56)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.MethodInvocationProceedingJoinPoint.proceed(MethodInvocationProceedingJoinPoint.java:88)
	at com.kxingyi.blog.aspect.RequestAspect.doAround(RequestAspect.java:68)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethodWithGivenArgs(AbstractAspectJAdvice.java:644)
	at org.springframework.aop.aspectj.AbstractAspectJAdvice.invokeAdviceMethod(AbstractAspectJAdvice.java:633)
	at org.springframework.aop.aspectj.AspectJAroundAdvice.invoke(AspectJAroundAdvice.java:70)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.adapter.AfterReturningAdviceInterceptor.invoke(AfterReturningAdviceInterceptor.java:55)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.aspectj.AspectJAfterThrowingAdvice.invoke(AspectJAfterThrowingAdvice.java:62)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:93)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.CglibAopProxy$CglibMethodInvocation.proceed(CglibAopProxy.java:747)
	at org.springframework.aop.framework.CglibAopProxy$DynamicAdvisedInterceptor.intercept(CglibAopProxy.java:689)
	at com.kxingyi.blog.controller.TypeController$$EnhancerBySpringCGLIB$$3a6b6fcd.insertType(<generated>)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:190)
	at org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:138)
	at org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:106)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:888)
	at org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:793)
	at org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)
	at org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1040)
	at org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:943)
	at org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1006)
	at org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:909)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:660)
	at org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:883)
	at javax.servlet.http.HttpServlet.service(HttpServlet.java:741)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:231)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:53)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:61)
	at org.apache.shiro.web.servlet.AdviceFilter.executeChain(AdviceFilter.java:108)
	at org.apache.shiro.web.servlet.AdviceFilter.doFilterInternal(AdviceFilter.java:137)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.shiro.web.servlet.ProxiedFilterChain.doFilter(ProxiedFilterChain.java:66)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.executeChain(AbstractShiroFilter.java:449)
	at org.apache.shiro.web.servlet.AbstractShiroFilter$1.call(AbstractShiroFilter.java:365)
	at org.apache.shiro.subject.support.SubjectCallable.doCall(SubjectCallable.java:90)
	at org.apache.shiro.subject.support.SubjectCallable.call(SubjectCallable.java:83)
	at org.apache.shiro.subject.support.DelegatingSubject.execute(DelegatingSubject.java:383)
	at org.apache.shiro.web.servlet.AbstractShiroFilter.doFilterInternal(AbstractShiroFilter.java:362)
	at org.apache.shiro.web.servlet.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:125)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at com.alibaba.druid.support.http.WebStatFilter.doFilter(WebStatFilter.java:123)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)
	at org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:119)
	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:193)
	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:166)
	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:202)
	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:96)
	at org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:526)
	at org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:139)
	at org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:92)
	at org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)
	at org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:343)
	at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:367)
	at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65)
	at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:860)
	at org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1591)
	at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61)
	at java.lang.Thread.run(Thread.java:748)
2020-04-24 23:56:36.004 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/getTypeForBack
2020-04-24 23:56:36.004 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:56:36.005 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:56:36.005 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.getTypeForBack
2020-04-24 23:56:36.006 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Page(currentPage=1, pageSize=20, totalPage=0, totalCount=0, list=null, params={}, sortColumn=null, sortMethod=asc)]
2020-04-24 23:56:36.046 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable, deleted from bl_type order by type_blog_count asc 
2020-04-24 23:56:36.047 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-04-24 23:56:36.050 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 3
2020-04-24 23:56:36.051 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 47
2020-04-24 23:56:36.058 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"data":[{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"c分类"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":89,"typeName":"ssssssss"},{"deleted":0,"enable":1,"typeBlogCount":11111111,"typeId":6,"typeName":"java分类"}],"msg":"操作成功！"}
2020-04-24 23:56:36.063 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:56:36.064 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/getTypeForBack(String), [Page(currentPage=1, pageSize=20, totalPage=0, totalCount=0, list=null, params={}, sortColumn=null, sortMethod=asc)](String), 200(Integer), com.kxingyi.blog.exception.BusinessException: 该分类已存在
	at com.kxingyi.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:33)
	at com.kxingyi.blog.controller.TypeController.insertType(TypeController.java:20)
	at com.kxingyi.blog.controller.TypeController$$FastClassBySpringCGLIB$$f1151ad2.invoke(<generated>)
	at com.kxingyi.blog.aspect.RequestAspect.doAround(RequestAspect.java:68)
	at com.kxingyi.blog.controller.TypeController$$EnhancerBySpringCGLIB$$3a6b6fcd.insertType(<generated>)
(String), POST(String), 47(Long), {"code":200,"data":[{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"c分类"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":89,"typeName":"ssssssss"},{"deleted":0,"enable":1,"typeBlogCount":11111111,"typeId":6,"typeName":"java分类"}],"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:56:36.068 DEBUG [http-nio-9000-exec-8]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:56:41.099 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/getTypeForBack
2020-04-24 23:56:41.100 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:56:41.100 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:56:41.100 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.getTypeForBack
2020-04-24 23:56:41.100 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Page(currentPage=1, pageSize=20, totalPage=0, totalCount=0, list=null, params={}, sortColumn=null, sortMethod=asc)]
2020-04-24 23:56:41.105 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable, deleted from bl_type order by type_blog_count asc 
2020-04-24 23:56:41.105 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-04-24 23:56:41.108 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 3
2020-04-24 23:56:41.109 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 10
2020-04-24 23:56:41.109 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"data":[{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"c分类"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":89,"typeName":"ssssssss"},{"deleted":0,"enable":1,"typeBlogCount":11111111,"typeId":6,"typeName":"java分类"}],"msg":"操作成功！"}
2020-04-24 23:56:41.113 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:56:41.114 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/getTypeForBack(String), [Page(currentPage=1, pageSize=20, totalPage=0, totalCount=0, list=null, params={}, sortColumn=null, sortMethod=asc)](String), 200(Integer), com.kxingyi.blog.exception.BusinessException: 该分类已存在
	at com.kxingyi.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:33)
	at com.kxingyi.blog.controller.TypeController.insertType(TypeController.java:20)
	at com.kxingyi.blog.controller.TypeController$$FastClassBySpringCGLIB$$f1151ad2.invoke(<generated>)
	at com.kxingyi.blog.aspect.RequestAspect.doAround(RequestAspect.java:68)
	at com.kxingyi.blog.controller.TypeController$$EnhancerBySpringCGLIB$$3a6b6fcd.insertType(<generated>)
(String), POST(String), 10(Long), {"code":200,"data":[{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"c分类"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":89,"typeName":"ssssssss"},{"deleted":0,"enable":1,"typeBlogCount":11111111,"typeId":6,"typeName":"java分类"}],"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:56:41.117 DEBUG [http-nio-9000-exec-2]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:56:41.730 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/getTypeForBack
2020-04-24 23:56:41.731 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:56:41.731 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:56:41.731 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.getTypeForBack
2020-04-24 23:56:41.731 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Page(currentPage=1, pageSize=20, totalPage=0, totalCount=0, list=null, params={}, sortColumn=null, sortMethod=asc)]
2020-04-24 23:56:41.735 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable, deleted from bl_type order by type_blog_count asc 
2020-04-24 23:56:41.735 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-04-24 23:56:41.738 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 3
2020-04-24 23:56:41.739 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 9
2020-04-24 23:56:41.739 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"data":[{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"c分类"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":89,"typeName":"ssssssss"},{"deleted":0,"enable":1,"typeBlogCount":11111111,"typeId":6,"typeName":"java分类"}],"msg":"操作成功！"}
2020-04-24 23:56:41.743 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:56:41.746 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/getTypeForBack(String), [Page(currentPage=1, pageSize=20, totalPage=0, totalCount=0, list=null, params={}, sortColumn=null, sortMethod=asc)](String), 200(Integer), com.kxingyi.blog.exception.BusinessException: 该分类已存在
	at com.kxingyi.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:33)
	at com.kxingyi.blog.controller.TypeController.insertType(TypeController.java:20)
	at com.kxingyi.blog.controller.TypeController$$FastClassBySpringCGLIB$$f1151ad2.invoke(<generated>)
	at com.kxingyi.blog.aspect.RequestAspect.doAround(RequestAspect.java:68)
	at com.kxingyi.blog.controller.TypeController$$EnhancerBySpringCGLIB$$3a6b6fcd.insertType(<generated>)
(String), POST(String), 9(Long), {"code":200,"data":[{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"c分类"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":89,"typeName":"ssssssss"},{"deleted":0,"enable":1,"typeBlogCount":11111111,"typeId":6,"typeName":"java分类"}],"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:56:41.752 DEBUG [http-nio-9000-exec-5]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
2020-04-24 23:56:42.191 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:135 -请求地址 : /type/getTypeForBack
2020-04-24 23:56:42.191 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:136 -请求方式 : POST
2020-04-24 23:56:42.191 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:139 -IP : 0:0:0:0:0:0:0:1
2020-04-24 23:56:42.191 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:141 -方法 : com.kxingyi.blog.controller.TypeController.getTypeForBack
2020-04-24 23:56:42.192 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.printRequestLog:143 -请求参数：[Page(currentPage=1, pageSize=20, totalPage=0, totalCount=0, list=null, params={}, sortColumn=null, sortMethod=asc)]
2020-04-24 23:56:42.196 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.TypeMapper.getAll.debug:159 -==>  Preparing: select type_id, type_name, type_blog_count, enable, deleted from bl_type order by type_blog_count asc 
2020-04-24 23:56:42.197 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.TypeMapper.getAll.debug:159 -==> Parameters: 
2020-04-24 23:56:42.199 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.TypeMapper.getAll.debug:159 -<==      Total: 3
2020-04-24 23:56:42.200 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.doAround:70 -耗时 : 9
2020-04-24 23:56:42.200 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.aspect.RequestAspect.doAfterReturning:104 -返回值：{"code":200,"data":[{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"c分类"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":89,"typeName":"ssssssss"},{"deleted":0,"enable":1,"typeBlogCount":11111111,"typeId":6,"typeName":"java分类"}],"msg":"操作成功！"}
2020-04-24 23:56:42.204 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==>  Preparing: insert into bl_log ( log_id, log_url, log_params, log_status, log_message, log_method, log_time, log_result, log_ip, created_time ) values ( ?,?,?,?,?,?,?,?,?,now() ) 
2020-04-24 23:56:42.207 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -==> Parameters: null, /type/getTypeForBack(String), [Page(currentPage=1, pageSize=20, totalPage=0, totalCount=0, list=null, params={}, sortColumn=null, sortMethod=asc)](String), 200(Integer), com.kxingyi.blog.exception.BusinessException: 该分类已存在
	at com.kxingyi.blog.service.impl.TypeServiceImpl.save(TypeServiceImpl.java:33)
	at com.kxingyi.blog.controller.TypeController.insertType(TypeController.java:20)
	at com.kxingyi.blog.controller.TypeController$$FastClassBySpringCGLIB$$f1151ad2.invoke(<generated>)
	at com.kxingyi.blog.aspect.RequestAspect.doAround(RequestAspect.java:68)
	at com.kxingyi.blog.controller.TypeController$$EnhancerBySpringCGLIB$$3a6b6fcd.insertType(<generated>)
(String), POST(String), 9(Long), {"code":200,"data":[{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":7,"typeName":"c分类"},{"deleted":0,"enable":1,"typeBlogCount":0,"typeId":89,"typeName":"ssssssss"},{"deleted":0,"enable":1,"typeBlogCount":11111111,"typeId":6,"typeName":"java分类"}],"msg":"操作成功！"}(String), 0:0:0:0:0:0:0:1(String)
2020-04-24 23:56:42.214 DEBUG [http-nio-9000-exec-10]com.kxingyi.blog.mapper.LogMapper.save.debug:159 -<==    Updates: 1
